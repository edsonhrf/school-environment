{"version":3,"names":["Provider","props","isOnlyVersionInTheme","theme","Object","keys","length","version","colorSchemeName","Appearance","getColorScheme","reduceMotionEnabled","setReduceMotionEnabled","React","useState","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","addEventListener","AccessibilityInfo","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","themeVersion","scheme","defaultThemeBase","defaultThemesByVersion","extendedThemeBase","animation","scale","isV3","children","settings","icon","MaterialCommunityIcon"],"sources":["Provider.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\n\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport { defaultThemesByVersion, ThemeProvider } from './theming';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  settings?: Settings;\n};\n\nconst Provider = (props: Props) => {\n  const isOnlyVersionInTheme =\n    props.theme && Object.keys(props.theme).length === 1 && props.theme.version;\n\n  const colorSchemeName =\n    ((!props.theme || isOnlyVersionInTheme) && Appearance?.getColorScheme()) ||\n    'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme || isOnlyVersionInTheme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme || isOnlyVersionInTheme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme, isOnlyVersionInTheme]);\n\n  const getTheme = () => {\n    const themeVersion = props.theme?.version || 3;\n    const scheme = colorScheme || 'light';\n    const defaultThemeBase = defaultThemesByVersion[themeVersion][scheme];\n\n    const extendedThemeBase = {\n      ...defaultThemeBase,\n      ...props.theme,\n      version: themeVersion,\n      animation: {\n        scale: reduceMotionEnabled ? 0 : 1,\n      },\n    };\n\n    return {\n      ...extendedThemeBase,\n      isV3: extendedThemeBase.version === 3,\n    };\n  };\n\n  const { children, settings } = props;\n\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        {/* @ts-expect-error check @callstack/react-theme-provider's children prop */}\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"],"mappings":"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"}