{"version":3,"names":["ListItem","left","right","title","description","onPress","theme","style","titleStyle","titleNumberOfLines","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","rest","alignToTop","setAlignToTop","React","useState","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","renderDescription","descriptionColor","selectable","ellipsizeMode","color","fontSize","styles","renderTitle","titleColor","colors","onSurface","text","alpha","rgb","string","onSurfaceVariant","containerV3","container","rowV3","row","getLeftStyles","itemV3","item","content","getRightStyles","displayName","StyleSheet","create","padding","paddingVertical","paddingRight","flexDirection","marginVertical","paddingLeft","flex","justifyContent","withInternalTheme"],"sources":["ListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  FlexAlignType,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type {\n  $RemoveChildren,\n  EllipsizeProp,\n  InternalTheme,\n} from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getLeftStyles, getRightStyles } from './utils';\n\ntype Title =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ninterface Style {\n  marginLeft?: number;\n  marginRight?: number;\n  marginVertical?: number;\n  alignSelf?: FlexAlignType;\n}\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Title text for the list item.\n   */\n  title: Title;\n  /**\n   * Description text for the list item or callback which returns a React element to display the description.\n   */\n  description?: Description;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { color: string; style?: Style }) => React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  titleEllipsizeMode?: EllipsizeProp;\n  /**\n   * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  descriptionEllipsizeMode?: EllipsizeProp;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst ListItem = ({\n  left,\n  right,\n  title,\n  description,\n  onPress,\n  theme,\n  style,\n  titleStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  titleEllipsizeMode,\n  descriptionEllipsizeMode,\n  descriptionStyle,\n  ...rest\n}: Props) => {\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const renderDescription = (\n    descriptionColor: string,\n    description?: Description | null\n  ) => {\n    return typeof description === 'function' ? (\n      description({\n        selectable: false,\n        ellipsizeMode: descriptionEllipsizeMode,\n        color: descriptionColor,\n        fontSize: styles.description.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        numberOfLines={descriptionNumberOfLines}\n        ellipsizeMode={descriptionEllipsizeMode}\n        style={[\n          styles.description,\n          { color: descriptionColor },\n          descriptionStyle,\n        ]}\n        onTextLayout={onDescriptionTextLayout}\n      >\n        {description}\n      </Text>\n    );\n  };\n\n  const renderTitle = () => {\n    const titleColor = theme.isV3\n      ? theme.colors.onSurface\n      : color(theme.colors.text).alpha(0.87).rgb().string();\n\n    return typeof title === 'function' ? (\n      title({\n        selectable: false,\n        ellipsizeMode: titleEllipsizeMode,\n        color: titleColor,\n        fontSize: styles.title.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        ellipsizeMode={titleEllipsizeMode}\n        numberOfLines={titleNumberOfLines}\n        style={[styles.title, { color: titleColor }, titleStyle]}\n      >\n        {title}\n      </Text>\n    );\n  };\n\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n      onPress={onPress}\n    >\n      <View style={theme.isV3 ? styles.rowV3 : styles.row}>\n        {left\n          ? left({\n              color: descriptionColor,\n              style: getLeftStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n        <View\n          style={[theme.isV3 ? styles.itemV3 : styles.item, styles.content]}\n        >\n          {renderTitle()}\n\n          {description\n            ? renderDescription(descriptionColor, description)\n            : null}\n        </View>\n        {right\n          ? right({\n              color: descriptionColor,\n              style: getRightStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nListItem.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowV3: {\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withInternalTheme(ListItem);\n"],"mappings":"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"}