{"version":3,"names":["FAB","React","forwardRef","ref","icon","label","accessibilityLabel","accessibilityState","animated","color","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","isV3","loading","testID","size","customSize","mode","variant","rest","current","visibility","useRef","Animated","Value","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","CrossFadeIcon","Icon","backgroundColor","foregroundColor","rippleColor","getFABColors","isLargeSize","isFlatMode","iconSize","loadingIndicatorSize","font","fonts","labelLarge","medium","fabStyle","getFabStyle","extendedStyle","getExtendedFabStyle","textStyle","borderRadius","StyleSheet","flatten","md3Elevation","newAccessibilityState","opacity","transform","styles","container","elevated","elevation","content","uppercaseLabel","create","overflow","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","withInternalTheme","FABWithTheme"],"sources":["FAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport ActivityIndicator from '../ActivityIndicator';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { getExtendedFabStyle, getFABColors, getFabStyle } from './utils';\n\ntype FABSize = 'small' | 'medium' | 'large';\n\ntype FABMode = 'flat' | 'elevated';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  @deprecated Deprecated in v.3x - use prop size=\"small\".\n   *\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Size of the `FAB`.\n   * - `small` - FAB with small height (40).\n   * - `medium` - FAB with default medium height (56).\n   * - `large` - FAB with large height (96).\n   */\n  size?: FABSize;\n  /**\n   * @supported Available in v5.x\n   *\n   * Custom size for the `FAB`. This prop takes precedence over size prop\n   */\n  customSize?: number;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Mode of the `FAB`. You can change the mode to adjust the the shadow:\n   * - `flat` - button without a shadow.\n   * - `elevated` - button with a shadow.\n   */\n  mode?: FABMode;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/fab-1.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-2.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-3.png\" />\n *   <img class=\"small\" src=\"screenshots/fab-4.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     icon=\"plus\"\n *     style={styles.fab}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = React.forwardRef<View, Props>(\n  (\n    {\n      icon,\n      label,\n      accessibilityLabel = label,\n      accessibilityState,\n      animated = true,\n      color: customColor,\n      disabled,\n      onPress,\n      onLongPress,\n      theme,\n      style,\n      visible = true,\n      uppercase = !theme.isV3,\n      loading,\n      testID = 'fab',\n      size = 'medium',\n      customSize,\n      mode = 'elevated',\n      variant = 'primary',\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const { current: visibility } = React.useRef<Animated.Value>(\n      new Animated.Value(visible ? 1 : 0)\n    );\n    const { isV3, animation } = theme;\n    const { scale } = animation;\n\n    React.useEffect(() => {\n      if (visible) {\n        Animated.timing(visibility, {\n          toValue: 1,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }).start();\n      } else {\n        Animated.timing(visibility, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true,\n        }).start();\n      }\n    }, [visible, scale, visibility]);\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const { backgroundColor, foregroundColor, rippleColor } = getFABColors({\n      theme,\n      variant,\n      disabled,\n      customColor,\n      style,\n    });\n\n    const isLargeSize = size === 'large';\n    const isFlatMode = mode === 'flat';\n    const iconSize = isLargeSize ? 36 : 24;\n    const loadingIndicatorSize = isLargeSize ? 24 : 18;\n    const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n    const fabStyle = getFabStyle({ customSize, size, theme });\n    const extendedStyle = getExtendedFabStyle({ customSize, theme });\n    const textStyle = {\n      color: foregroundColor,\n      ...font,\n    };\n\n    const { borderRadius = fabStyle.borderRadius } = (StyleSheet.flatten(\n      style\n    ) || {}) as ViewStyle;\n\n    const md3Elevation = isFlatMode || disabled ? 0 : 3;\n\n    const newAccessibilityState = { ...accessibilityState, disabled };\n\n    return (\n      <Surface\n        ref={ref}\n        {...rest}\n        style={\n          [\n            {\n              borderRadius,\n              backgroundColor,\n              opacity: visibility,\n              transform: [\n                {\n                  scale: visibility,\n                },\n              ],\n            },\n            styles.container,\n            !isV3 && styles.elevated,\n            !isV3 && disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        testID={`${testID}-container`}\n        {...(isV3 && { elevation: md3Elevation })}\n      >\n        <TouchableRipple\n          borderless\n          onPress={onPress}\n          onLongPress={onLongPress}\n          rippleColor={rippleColor}\n          disabled={disabled}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityRole=\"button\"\n          accessibilityState={newAccessibilityState}\n          testID={testID}\n        >\n          <View\n            style={[styles.content, label ? extendedStyle : fabStyle]}\n            testID={`${testID}-content`}\n            pointerEvents=\"none\"\n          >\n            {icon && loading !== true ? (\n              <IconComponent\n                source={icon}\n                size={customSize ? customSize / 2 : iconSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {loading ? (\n              <ActivityIndicator\n                size={customSize ? customSize / 2 : loadingIndicatorSize}\n                color={foregroundColor}\n              />\n            ) : null}\n            {label ? (\n              <Text\n                variant=\"labelLarge\"\n                selectable={false}\n                style={[\n                  styles.label,\n                  uppercase && styles.uppercaseLabel,\n                  textStyle,\n                ]}\n              >\n                {label}\n              </Text>\n            ) : null}\n          </View>\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  elevated: {\n    elevation: 6,\n  },\n  container: {\n    overflow: 'hidden',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withInternalTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withInternalTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"],"mappings":"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"}