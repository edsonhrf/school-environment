{"version":3,"names":["SIZE","SCALE","AnimatedFAB","icon","label","accessibilityLabel","accessibilityState","color","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","isV3","testID","animateFrom","extended","iconMode","variant","rest","isIOS","Platform","OS","isAnimatedFromRight","isIconStatic","isRTL","I18nManager","current","visibility","React","useRef","Animated","Value","animFAB","animation","scale","textWidth","setTextWidth","useState","textHeight","setTextHeight","borderRadius","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","foregroundColor","getFABColors","rippleColor","alpha","rgb","string","extendedWidth","distance","easing","Easing","linear","onTextLayout","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","getCombinedStyles","font","fonts","labelLarge","medium","textStyle","md2Elevation","md3Elevation","newAccessibilityState","opacity","transform","elevation","styles","container","scaleY","interpolate","inputRange","outputRange","standard","StyleSheet","absoluteFill","shadowWrapper","shadow","innerWrapper","iconWrapper","undefined","minWidth","top","translateX","uppercaseLabel","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform","withInternalTheme"],"sources":["AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  Text,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport AnimatedText from '../Typography/AnimatedText';\nimport { getCombinedStyles, getFABColors } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  /**\n   * @supported Available in v3.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst SCALE = 0.9;\n\n/**\n * An animated, extending horizontally floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/animated-fab.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import {\n *   StyleProp,\n *   ViewStyle,\n *   Animated,\n *   StyleSheet,\n *   Platform,\n *   ScrollView,\n *   Text,\n *   SafeAreaView,\n *   I18nManager,\n * } from 'react-native';\n * import { AnimatedFAB } from 'react-native-paper';\n *\n * const MyComponent = ({\n *   animatedValue,\n *   visible,\n *   extended,\n *   label,\n *   animateFrom,\n *   style,\n *   iconMode,\n * }) => {\n *   const [isExtended, setIsExtended] = React.useState(true);\n *\n *   const isIOS = Platform.OS === 'ios';\n *\n *   const onScroll = ({ nativeEvent }) => {\n *     const currentScrollPosition =\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n *\n *     setIsExtended(currentScrollPosition <= 0);\n *   };\n *\n *   const fabStyle = { [animateFrom]: 16 };\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <ScrollView onScroll={onScroll}>\n *         {[...new Array(100).keys()].map((_, i) => (\n *           <Text>{i}</Text>\n *         ))}\n *       </ScrollView>\n *       <AnimatedFAB\n *         icon={'plus'}\n *         label={'Label'}\n *         extended={isExtended}\n *         onPress={() => console.log('Pressed')}\n *         visible={visible}\n *         animateFrom={'right'}\n *         iconMode={'static'}\n *         style={[styles.fabStyle, style, fabStyle]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flexGrow: 1,\n *   },\n *   fabStyle: {\n *     bottom: 16,\n *     right: 16,\n *     position: 'absolute',\n *   },\n * });\n * ```\n */\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = !theme.isV3,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  variant = 'primary',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { isV3, animation } = theme;\n  const { scale } = animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const { backgroundColor, foregroundColor } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    style,\n  });\n\n  const rippleColor = color(foregroundColor).alpha(0.12).rgb().string();\n\n  const extendedWidth = textWidth + SIZE + borderRadius;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - borderRadius\n    : textWidth + borderRadius;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: foregroundColor,\n    ...font,\n  };\n\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            borderRadius,\n          },\n          !isV3 && {\n            elevation: md2Elevation,\n          },\n          styles.container,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      {...(isV3 && { elevation: md3Elevation })}\n    >\n      <Animated.View\n        style={[\n          !isV3 && {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n          { borderRadius },\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              disabled ? styles.disabled : styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n                borderRadius,\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              disabled ? styles.disabled : styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    borderRadius,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.innerWrapper, { borderRadius }]}\n        >\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n                borderRadius,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityRole=\"button\"\n              accessibilityState={newAccessibilityState}\n              testID={testID}\n              style={{ borderRadius }}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                    borderRadius,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          variant=\"labelLarge\"\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\n                : borderRadius,\n            },\n            {\n              minWidth: textWidth,\n              top: -SIZE / 2 - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            textStyle,\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withInternalTheme(AnimatedFAB);\n"],"mappings":"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"}