{"version":3,"names":["DIALOG_ELEVATION","Dialog","children","dismissable","onDismiss","visible","style","theme","isV3","dark","mode","colors","roundness","borderRadius","backgroundColorV2","overlay","surface","backgroundColor","elevation","level3","styles","container","React","Children","toArray","filter","child","map","i","isValidElement","cloneElement","marginTop","props","type","DialogContent","paddingTop","Content","Actions","DialogActions","Title","DialogTitle","ScrollArea","DialogScrollArea","Icon","DialogIcon","StyleSheet","create","marginVertical","Platform","OS","marginHorizontal","justifyContent","withInternalTheme"],"sources":["Dialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, ViewStyle } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport overlay from '../../styles/overlay';\nimport type { InternalTheme } from '../../types';\nimport Modal from '../Modal';\nimport DialogActions from './DialogActions';\nimport DialogContent from './DialogContent';\nimport DialogIcon from './DialogIcon';\nimport DialogScrollArea from './DialogScrollArea';\nimport DialogTitle from './DialogTitle';\n\nexport type Props = {\n  /**\n   * Determines whether clicking outside the dialog dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the dialog.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the dialog is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Dialog`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DIALOG_ELEVATION: number = 24;\n\n/**\n * Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks.\n * To render the `Dialog` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/dialog-1.png\" />\n *   <img class=\"small\" src=\"screenshots/dialog-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Dialog, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const showDialog = () => setVisible(true);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <View>\n *         <Button onPress={showDialog}>Show Dialog</Button>\n *         <Portal>\n *           <Dialog visible={visible} onDismiss={hideDialog}>\n *             <Dialog.Title>Alert</Dialog.Title>\n *             <Dialog.Content>\n *               <Paragraph>This is simple dialog</Paragraph>\n *             </Dialog.Content>\n *             <Dialog.Actions>\n *               <Button onPress={hideDialog}>Done</Button>\n *             </Dialog.Actions>\n *           </Dialog>\n *         </Portal>\n *       </View>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Dialog = ({\n  children,\n  dismissable = true,\n  onDismiss,\n  visible = false,\n  style,\n  theme,\n}: Props) => {\n  const { isV3, dark, mode, colors, roundness } = theme;\n\n  const borderRadius = (isV3 ? 7 : 1) * roundness;\n\n  const backgroundColorV2 =\n    dark && mode === 'adaptive'\n      ? overlay(DIALOG_ELEVATION, colors?.surface)\n      : colors?.surface;\n  const backgroundColor = isV3\n    ? theme.colors.elevation.level3\n    : backgroundColorV2;\n\n  return (\n    <Modal\n      dismissable={dismissable}\n      onDismiss={onDismiss}\n      visible={visible}\n      contentContainerStyle={[\n        {\n          borderRadius,\n          backgroundColor,\n        },\n        styles.container,\n        style,\n      ]}\n      theme={theme}\n    >\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (isV3) {\n            if (i === 0 && React.isValidElement(child)) {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                style: [{ marginTop: 24 }, child.props.style],\n              });\n            }\n          }\n\n          if (\n            i === 0 &&\n            React.isValidElement(child) &&\n            child.type === DialogContent\n          ) {\n            // Dialog content is the first item, so we add a top padding\n            return React.cloneElement(child as React.ReactElement<any>, {\n              style: [{ paddingTop: 24 }, child.props.style],\n            });\n          }\n\n          return child;\n        })}\n    </Modal>\n  );\n};\n\n// @component ./DialogContent.tsx\nDialog.Content = DialogContent;\n// @component ./DialogActions.tsx\nDialog.Actions = DialogActions;\n// @component ./DialogTitle.tsx\nDialog.Title = DialogTitle;\n// @component ./DialogScrollArea.tsx\nDialog.ScrollArea = DialogScrollArea;\n// @component ./DialogIcon.tsx\nDialog.Icon = DialogIcon;\n\nconst styles = StyleSheet.create({\n  container: {\n    /**\n     * This prevents the shadow from being clipped on Android since Android\n     * doesn't support `overflow: visible`.\n     * One downside for this fix is that it will disable clicks on the area\n     * of the shadow around the dialog, consequently, if you click around the\n     * dialog (44 pixel from the top and bottom) it won't be dismissed.\n     */\n    marginVertical: Platform.OS === 'android' ? 44 : 0,\n    marginHorizontal: 26,\n    elevation: DIALOG_ELEVATION,\n    justifyContent: 'flex-start',\n  },\n});\n\nexport default withInternalTheme(Dialog);\n"],"mappings":"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"}