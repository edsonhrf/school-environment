{"version":3,"names":["DialogScrollArea","props","theme","useInternalTheme","borderStyles","borderColor","isV3","colors","surfaceVariant","borderTopWidth","StyleSheet","hairlineWidth","borderBottomWidth","styles","container","v3Container","style","children","displayName","create","paddingHorizontal","flexGrow","flexShrink","marginBottom"],"sources":["DialogScrollArea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-scroll-area.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogScrollArea = (props: Props) => {\n  const theme = useInternalTheme();\n  const borderStyles = {\n    borderColor: theme.isV3\n      ? theme.colors.surfaceVariant\n      : 'rgba(0, 0, 0, .12)',\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n  };\n  return (\n    <View\n      {...props}\n      style={[\n        styles.container,\n        borderStyles,\n        theme.isV3 && styles.v3Container,\n        props.style,\n      ]}\n    >\n      {props.children}\n    </View>\n  );\n};\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  v3Container: {\n    marginBottom: 24,\n  },\n});\n\nexport default DialogScrollArea;\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AAAsD;AAAA;AAAA;AAUtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAIC,KAAY,IAAK;EACzC,MAAMC,KAAK,GAAG,IAAAC,yBAAgB,GAAE;EAChC,MAAMC,YAAY,GAAG;IACnBC,WAAW,EAAEH,KAAK,CAACI,IAAI,GACnBJ,KAAK,CAACK,MAAM,CAACC,cAAc,GAC3B,oBAAoB;IACxBC,cAAc,EAAEP,KAAK,CAACI,IAAI,GAAG,CAAC,GAAGI,uBAAU,CAACC,aAAa;IACzDC,iBAAiB,EAAEV,KAAK,CAACI,IAAI,GAAG,CAAC,GAAGI,uBAAU,CAACC;EACjD,CAAC;EACD,oBACE,oBAAC,iBAAI,eACCV,KAAK;IACT,KAAK,EAAE,CACLY,MAAM,CAACC,SAAS,EAChBV,YAAY,EACZF,KAAK,CAACI,IAAI,IAAIO,MAAM,CAACE,WAAW,EAChCd,KAAK,CAACe,KAAK;EACX,IAEDf,KAAK,CAACgB,QAAQ,CACV;AAEX,CAAC;AAEDjB,gBAAgB,CAACkB,WAAW,GAAG,mBAAmB;AAElD,MAAML,MAAM,GAAGH,uBAAU,CAACS,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAE,CAAC;IACXC,UAAU,EAAE;EACd,CAAC;EACDP,WAAW,EAAE;IACXQ,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAAC,eAEYvB,gBAAgB;AAAA"}