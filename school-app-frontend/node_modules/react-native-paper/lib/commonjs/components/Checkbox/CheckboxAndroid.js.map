{"version":3,"names":["ANIMATION_DURATION","CheckboxAndroid","status","theme","disabled","onPress","testID","rest","current","scaleAnim","React","useRef","Animated","Value","isFirstRendering","animation","scale","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","rippleColor","selectionControlColor","getAndroidSelectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","borderWidth","interpolate","inputRange","outputRange","icon","styles","container","transform","StyleSheet","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","withInternalTheme","CheckboxAndroidWithTheme"],"sources":["CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getAndroidSelectionControlColor } from './utils';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withInternalTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nconst CheckboxAndroidWithTheme = withInternalTheme(CheckboxAndroid);\n// @component-docs ignore-next-line\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n"],"mappings":"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"}