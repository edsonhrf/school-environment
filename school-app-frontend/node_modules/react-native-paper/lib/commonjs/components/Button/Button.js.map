{"version":3,"names":["Button","disabled","compact","mode","dark","loading","icon","buttonColor","customButtonColor","textColor","customTextColor","children","accessibilityLabel","accessibilityHint","onPress","onPressIn","onPressOut","onLongPress","style","theme","uppercase","isV3","contentStyle","labelStyle","testID","accessible","rest","isMode","React","useCallback","modeToCompare","roundness","animation","isElevationEntitled","initialElevation","activeElevation","current","elevation","useRef","Animated","Value","useEffect","setValue","handlePressIn","scale","timing","toValue","duration","useNativeDriver","start","handlePressOut","borderRadius","iconSize","backgroundColor","borderColor","borderWidth","getButtonColors","rippleColor","color","alpha","rgb","string","buttonStyle","touchableStyle","StyleSheet","flatten","customLabelColor","fontSize","customLabelSize","font","fonts","labelLarge","medium","textStyle","iconStyle","flexDirection","styles","iconReverse","md3IconReverse","md3IconReverseTextMode","md3Icon","md3IconTextMode","button","content","label","md2Label","md3LabelTextAddons","md3LabelText","md3Label","compactLabel","uppercaseLabel","create","minWidth","borderStyle","alignItems","justifyContent","marginLeft","marginRight","textAlign","marginVertical","marginHorizontal","letterSpacing","textTransform","withInternalTheme"],"sources":["Button.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { ButtonMode, getButtonColors } from './utils';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the button. You can change the mode to adjust the styling to give it desired emphasis.\n   * - `text` - flat button without background or outline, used for the lowest priority actions, especially when presenting multiple options.\n   * - `outlined` - button with an outline without background, typically used for important, but not primary action â€“ represents medium emphasis.\n   * - `contained` - button with a background color, used for important action, have the most visual impact and high emphasis.\n   * - `elevated` - button with a background color and elevation, used when absolutely necessary e.g. button requires visual separation from a patterned background. @supported Available in v5.x with theme version 3\n   * - `contained-tonal` - button with a secondary background color, an alternative middle ground between contained and outlined buttons. @supported Available in v5.x with theme version 3\n   */\n  mode?: 'text' | 'outlined' | 'contained' | 'elevated' | 'contained-tonal';\n  /**\n   * Whether the color is a dark color. A dark button will render light text and vice-versa. Only applicable for:\n   *  * `contained` mode for theme version 2\n   *  * `contained`, `contained-tonal` and `elevated` modes for theme version 3.\n   */\n  dark?: boolean;\n  /**\n   * Use a compact look, useful for `text` buttons in a row.\n   */\n  compact?: boolean;\n  /**\n   * @deprecated Deprecated in v5.x - use `buttonColor` or `textColor` instead.\n   * Custom text color for flat button, or background color for contained button.\n   */\n  color?: string;\n  /**\n   * @supported Available in v5.x\n   * Custom button's background color.\n   */\n  buttonColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Custom button's text color.\n   */\n  textColor?: string;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Icon to display for the `Button`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Label text of the button.\n   */\n  children: React.ReactNode;\n  /**\n   * Make the label text uppercased. Note that this won't work if you pass React elements as children.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility hint for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityHint?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @supported Available in v5.x\n   * Function to execute as soon as the touchable element is pressed and invoked even before onPress.\n   */\n  onPressIn?: () => void;\n  /**\n   * @supported Available in v5.x\n   * Function to execute as soon as the touch is released even before onPress.\n   */\n  onPressOut?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Style of button's inner content.\n   * Use this prop to apply custom height and width and to set the icon on the right with `flexDirection: 'row-reverse'`.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the button text.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n/**\n * A button is component that the user can press to trigger an action.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/button-1.png\" />\n *     <figcaption>Text button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-2.png\" />\n *     <figcaption>Outlined button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-3.png\" />\n *     <figcaption>Contained button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-4.png\" />\n *     <figcaption>Elevated button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/button-5.png\" />\n *     <figcaption>Contained-tonal button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n *     Press me\n *   </Button>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Button = ({\n  disabled,\n  compact,\n  mode = 'text',\n  dark,\n  loading,\n  icon,\n  buttonColor: customButtonColor,\n  textColor: customTextColor,\n  children,\n  accessibilityLabel,\n  accessibilityHint,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  style,\n  theme,\n  uppercase = !theme.isV3,\n  contentStyle,\n  labelStyle,\n  testID,\n  accessible,\n  ...rest\n}: Props) => {\n  const isMode = React.useCallback(\n    (modeToCompare: ButtonMode) => {\n      return mode === modeToCompare;\n    },\n    [mode]\n  );\n  const { roundness, isV3, animation } = theme;\n\n  const isElevationEntitled =\n    !disabled && (isV3 ? isMode('elevated') : isMode('contained'));\n  const initialElevation = isV3 ? 1 : 2;\n  const activeElevation = isV3 ? 2 : 8;\n\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(isElevationEntitled ? initialElevation : 0)\n  );\n\n  React.useEffect(() => {\n    elevation.setValue(isElevationEntitled ? initialElevation : 0);\n  }, [isElevationEntitled, elevation, initialElevation]);\n\n  const handlePressIn = () => {\n    onPressIn?.();\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: activeElevation,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressOut = () => {\n    onPressOut?.();\n    if (isV3 ? isMode('elevated') : isMode('contained')) {\n      const { scale } = animation;\n      Animated.timing(elevation, {\n        toValue: initialElevation,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const borderRadius = (isV3 ? 5 : 1) * roundness;\n  const iconSize = isV3 ? 18 : 16;\n\n  const { backgroundColor, borderColor, textColor, borderWidth } =\n    getButtonColors({\n      customButtonColor,\n      customTextColor,\n      theme,\n      mode,\n      disabled,\n      dark,\n    });\n\n  const rippleColor = color(textColor).alpha(0.12).rgb().string();\n\n  const buttonStyle = {\n    backgroundColor,\n    borderColor,\n    borderWidth,\n    borderRadius,\n  };\n  const touchableStyle = {\n    borderRadius: style\n      ? ((StyleSheet.flatten(style) || {}) as ViewStyle).borderRadius ??\n        borderRadius\n      : borderRadius,\n  };\n\n  const { color: customLabelColor, fontSize: customLabelSize } =\n    StyleSheet.flatten(labelStyle) || {};\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: textColor,\n    ...font,\n  };\n\n  const iconStyle =\n    StyleSheet.flatten(contentStyle)?.flexDirection === 'row-reverse'\n      ? [\n          styles.iconReverse,\n          isV3 && styles.md3IconReverse,\n          isV3 && isMode('text') && styles.md3IconReverseTextMode,\n        ]\n      : [\n          styles.icon,\n          isV3 && styles.md3Icon,\n          isV3 && isMode('text') && styles.md3IconTextMode,\n        ];\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          styles.button,\n          compact && styles.compact,\n          buttonStyle,\n          style,\n          !isV3 && { elevation },\n        ] as ViewStyle\n      }\n      {...(isV3 && { elevation: elevation })}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={accessibilityHint}\n        accessibilityRole=\"button\"\n        accessibilityState={{ disabled }}\n        accessible={accessible}\n        disabled={disabled}\n        rippleColor={rippleColor}\n        style={touchableStyle}\n        testID={testID}\n      >\n        <View style={[styles.content, contentStyle]}>\n          {icon && loading !== true ? (\n            <View style={iconStyle}>\n              <Icon\n                source={icon}\n                size={customLabelSize ?? iconSize}\n                color={\n                  typeof customLabelColor === 'string'\n                    ? customLabelColor\n                    : textColor\n                }\n              />\n            </View>\n          ) : null}\n          {loading ? (\n            <ActivityIndicator\n              size={customLabelSize ?? iconSize}\n              color={\n                typeof customLabelColor === 'string'\n                  ? customLabelColor\n                  : textColor\n              }\n              style={iconStyle}\n            />\n          ) : null}\n          <Text\n            variant=\"labelLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              styles.label,\n              !isV3 && styles.md2Label,\n              isV3 &&\n                (isMode('text')\n                  ? icon || loading\n                    ? styles.md3LabelTextAddons\n                    : styles.md3LabelText\n                  : styles.md3Label),\n              compact && styles.compactLabel,\n              uppercase && styles.uppercaseLabel,\n              textStyle,\n              labelStyle,\n            ]}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    minWidth: 64,\n    borderStyle: 'solid',\n  },\n  compact: {\n    minWidth: 'auto',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    marginLeft: 12,\n    marginRight: -4,\n  },\n  iconReverse: {\n    marginRight: 12,\n    marginLeft: -4,\n  },\n  md3Icon: {\n    marginLeft: 16,\n    marginRight: -16,\n  },\n  md3IconReverse: {\n    marginLeft: -16,\n    marginRight: 16,\n  },\n  md3IconTextMode: {\n    marginLeft: 12,\n    marginRight: -8,\n  },\n  md3IconReverseTextMode: {\n    marginLeft: -8,\n    marginRight: 12,\n  },\n  label: {\n    textAlign: 'center',\n    marginVertical: 9,\n    marginHorizontal: 16,\n  },\n  md2Label: {\n    letterSpacing: 1,\n  },\n  compactLabel: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  md3Label: {\n    marginVertical: 10,\n    marginHorizontal: 24,\n  },\n  md3LabelText: {\n    marginHorizontal: 12,\n  },\n  md3LabelTextAddons: {\n    marginHorizontal: 16,\n  },\n});\n\nexport default withInternalTheme(Button);\n"],"mappings":"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"}