{"version":3,"names":["PADDING","IconButton","React","forwardRef","ref","icon","iconColor","customIconColor","containerColor","customContainerColor","size","accessibilityLabel","disabled","onPress","selected","animated","mode","style","rest","theme","useInternalTheme","isV3","IconComponent","CrossFadeIcon","Icon","rippleColor","backgroundColor","borderColor","getIconButtonColor","buttonSize","borderStyles","borderWidth","borderRadius","width","height","styles","container","elevation","touchable","TouchableRipple","supported","top","left","bottom","right","StyleSheet","create","overflow","margin","flexGrow","justifyContent","alignItems","opacity"],"sources":["IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, ThemeProp } from '../../types';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getIconButtonColor } from './utils';\n\nconst PADDING = 8;\n\ntype IconButtonMode = 'outlined' | 'contained' | 'contained-tonal';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * @supported Available in v5.x\n   * Mode of the icon button. By default there is no specified mode - only pressable icon will be rendered.\n   */\n  mode?: IconButtonMode;\n  /**\n   * @renamed Renamed from 'color' to 'iconColor' in v5.x\n   * Color of the icon.\n   */\n  iconColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Background color of the icon container.\n   */\n  containerColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Whether icon button is selected. A selected button receives alternative combination of icon and container colors.\n   */\n  selected?: boolean;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-1.png\" />\n *     <figcaption>Default icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-2.png\" />\n *     <figcaption>Contained icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-3.png\" />\n *     <figcaption>Contained-tonal icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/icon-button-4.png\" />\n *     <figcaption>Outlined icon button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, MD3Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     iconColor={MD3Colors.error50}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst IconButton = React.forwardRef<View, Props>(\n  (\n    {\n      icon,\n      iconColor: customIconColor,\n      containerColor: customContainerColor,\n      size = 24,\n      accessibilityLabel,\n      disabled,\n      onPress,\n      selected = false,\n      animated = false,\n      mode,\n      style,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme();\n    const { isV3 } = theme;\n\n    const IconComponent = animated ? CrossFadeIcon : Icon;\n\n    const { iconColor, rippleColor, backgroundColor, borderColor } =\n      getIconButtonColor({\n        theme,\n        disabled,\n        selected,\n        mode,\n        customIconColor,\n        customContainerColor,\n      });\n\n    const buttonSize = isV3 ? size + 2 * PADDING : size * 1.5;\n\n    const borderStyles = {\n      borderWidth: isV3 && mode === 'outlined' && !selected ? 1 : 0,\n      borderRadius: buttonSize / 2,\n      borderColor,\n    };\n\n    return (\n      <Surface\n        ref={ref}\n        style={\n          [\n            {\n              backgroundColor,\n              width: buttonSize,\n              height: buttonSize,\n            },\n            styles.container,\n            borderStyles,\n            !isV3 && disabled && styles.disabled,\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...(isV3 && { elevation: 0 })}\n      >\n        <TouchableRipple\n          borderless\n          centered\n          onPress={onPress}\n          rippleColor={rippleColor}\n          accessibilityLabel={accessibilityLabel}\n          style={styles.touchable}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ disabled }}\n          disabled={disabled}\n          hitSlop={\n            TouchableRipple.supported\n              ? { top: 10, left: 10, bottom: 10, right: 10 }\n              : { top: 6, left: 6, bottom: 6, right: 6 }\n          }\n          {...rest}\n        >\n          <IconComponent color={iconColor} source={icon} size={size} />\n        </TouchableRipple>\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    margin: 6,\n    elevation: 0,\n  },\n  touchable: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default IconButton;\n"],"mappings":"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"}