{"version":3,"names":["TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","adornmentConfig","getAdornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","getConstants","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","inputTextColor","activeColor","placeholderColor","errorColor","getOutlinedInputColors","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","AdornmentSide","Left","AdornmentType","Icon","ADORNMENT_SIZE","minInputHeight","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","isAndroid","Platform","OS","styles","inputOutlinedDense","inputOutlined","pad","calculatePadding","paddingOut","adjustPaddingOut","baseLabelTranslateY","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","interpolatePlaceholder","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","maxFontSizeMultiplier","minHeight","outlinedHeight","LABEL_PADDING_TOP_DENSE","leftLayout","rightLayout","leftAffixTopPosition","calculateOutlinedIconAndAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","LabelBackground","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n  style,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n      style,\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"}