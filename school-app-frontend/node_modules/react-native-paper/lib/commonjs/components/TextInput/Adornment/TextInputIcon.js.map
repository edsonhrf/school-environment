{"version":3,"names":["StyleContext","React","createContext","style","isTextInputFocused","forceFocus","testID","IconAdornment","icon","topPosition","side","isV3","useInternalTheme","ICON_OFFSET","getConstants","top","contextState","TextInputIcon","onPress","forceTextInputFocus","color","rest","useContext","onPressWithFocusControl","useCallback","theme","iconColor","disabled","colors","onSurface","onSurfaceVariant","text","styles","container","iconButton","ICON_SIZE","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin"],"sources":["TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport type { $Omit, ThemeProp } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport IconButton from '../../IconButton/IconButton';\nimport { ICON_SIZE } from '../constants';\nimport { getConstants } from '../helpers';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color'\n> & {\n  /**\n   * @renamed Renamed from 'name' to 'icon` in v5.x\n   * Icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n  testID: string;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n  testID: '',\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n  } & Omit<StyleContextType, 'style'>\n> = ({ icon, topPosition, side, isTextInputFocused, forceFocus, testID }) => {\n  const { isV3 } = useInternalTheme();\n  const { ICON_OFFSET } = getConstants(isV3);\n\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = { style, isTextInputFocused, forceFocus, testID };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon icon=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  icon,\n  onPress,\n  forceTextInputFocus,\n  color,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus, testID } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(() => {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress?.();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n\n  const theme = useInternalTheme();\n\n  let iconColor = color;\n\n  if (theme.isV3) {\n    if (rest.disabled) {\n      iconColor = theme.colors.onSurface;\n    }\n    iconColor = theme.colors.onSurfaceVariant;\n  } else {\n    iconColor = theme.colors.text;\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={icon}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        iconColor={\n          typeof color === 'function' ? color(isTextInputFocused) : iconColor\n        }\n        testID={testID}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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"}