{"version":3,"names":["TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","underlineStyle","activeUnderlineColor","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","isAndroid","Platform","OS","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","LABEL_PADDING_TOP","FLAT_INPUT_OFFSET","MIN_HEIGHT","getConstants","fontSize","fontSizeStyle","lineHeight","fontWeight","height","paddingHorizontal","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","getAdornmentConfig","paddingLeft","paddingRight","calculateFlatInputHorizontalPadding","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","getAdornmentStyleAdjustmentForNativeInput","inputOffset","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getFlatInputColors","containerStyle","borderTopLeftRadius","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","LABEL_PADDING_TOP_DENSE","inputHeight","calculateInputHeight","topPosition","calculateLabelTopPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","calculatePadding","paddingFlat","adjustPaddingFlat","baseLabelTranslateY","MINIMIZED_LABEL_Y_OFFSET","placeholderOpacity","interpolatePlaceholder","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","calculateFlatAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","placeholder","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","maxFontSizeMultiplier","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","useInternalTheme","activeScale","underline","md3Underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextInput as NativeTextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport {\n  ADORNMENT_SIZE,\n  LABEL_PADDING_TOP_DENSE,\n  LABEL_WIGGLE_X_OFFSET,\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_Y_OFFSET,\n  MIN_DENSE_HEIGHT,\n  MIN_DENSE_HEIGHT_WL,\n} from './constants';\nimport {\n  adjustPaddingFlat,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n  calculateInputHeight,\n  calculateLabelTopPosition,\n  calculatePadding,\n  getConstants,\n  getFlatInputColors,\n  interpolatePlaceholder,\n  Padding,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport type { ChildTextInputProps, RenderProps } from './types';\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  underlineStyle,\n  activeUnderlineColor,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-flat',\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { LABEL_PADDING_TOP, FLAT_INPUT_OFFSET, MIN_HEIGHT } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    lineHeight,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n    isV3,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n      isV3,\n    });\n\n  const {\n    inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor,\n    backgroundColor,\n  } = getFlatInputColors({\n    underlineColor,\n    activeUnderlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const containerStyle = {\n    backgroundColor,\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) *\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: isAndroid\n      ? {\n          paddingLeft: I18nManager.isRTL ? paddingRight : paddingLeft,\n          paddingRight: I18nManager.isRTL ? paddingLeft : paddingRight,\n        }\n      : { paddingRight, paddingLeft },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        style={underlineStyle}\n        hasActiveOutline={hasActiveOutline}\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && !!label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID,\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              lineHeight,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.getConstants().isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors?: {\n    error?: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n  hasActiveOutline?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n  hasActiveOutline,\n  style,\n}: UnderlineProps) => {\n  const { isV3 } = useInternalTheme();\n\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n\n  if (error) backgroundColor = colors?.error;\n\n  const activeScale = isV3 ? 2 : 1;\n\n  return (\n    <Animated.View\n      testID=\"text-input-underline\"\n      style={[\n        styles.underline,\n        isV3 && styles.md3Underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [\n            {\n              scaleY: (isV3 ? hasActiveOutline : parentState.focused)\n                ? activeScale\n                : 0.5,\n            },\n          ],\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  md3Underline: {\n    height: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"],"mappings":"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"}