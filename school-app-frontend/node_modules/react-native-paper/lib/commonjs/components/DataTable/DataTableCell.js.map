{"version":3,"names":["DataTableCell","children","textStyle","style","numeric","rest","styles","container","right","displayName","StyleSheet","create","flex","flexDirection","alignItems","justifyContent"],"sources":["DataTableCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle, TextStyle } from 'react-native';\n\nimport type { $RemoveChildren } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableCell`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({\n  children,\n  textStyle,\n  style,\n  numeric,\n  ...rest\n}: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text style={textStyle} numberOfLines={1}>\n      {children}\n    </Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n"],"mappings":";;;;;;AAAA;AACA;AAGA;AACA;AAAsC;AAAA;AAAA;AAAA;AAsBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,aAAa,GAAG;EAAA,IAAC;IACrBC,QAAQ;IACRC,SAAS;IACTC,KAAK;IACLC,OAAO;IACP,GAAGC;EACE,CAAC;EAAA,oBACN,oBAAC,wBAAe,eACVA,IAAI;IACR,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEH,OAAO,IAAIE,MAAM,CAACE,KAAK,EAAEL,KAAK;EAAE,iBAE1D,oBAAC,aAAI;IAAC,KAAK,EAAED,SAAU;IAAC,aAAa,EAAE;EAAE,GACtCD,QAAQ,CACJ,CACS;AAAA,CACnB;AAEDD,aAAa,CAACS,WAAW,GAAG,gBAAgB;AAE5C,MAAMH,MAAM,GAAGI,uBAAU,CAACC,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EAEDN,KAAK,EAAE;IACLO,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAAC,eAEYf,aAAa;AAAA"}