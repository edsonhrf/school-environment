{"version":3,"names":["DEFAULT_PADDING","getSegmentedButtonDensityPadding","density","padding","getDisabledSegmentedButtonStyle","theme","index","buttons","width","getSegmentedButtonBorderWidth","isDisabled","disabled","isNextDisabled","borderRightWidth","getSegmentedButtonBorderRadius","segment","borderTopRightRadius","borderBottomRightRadius","isV3","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","getSegmentedButtonBackgroundColor","checked","colors","secondaryContainer","color","primary","alpha","rgb","string","getSegmentedButtonBorderColor","surfaceDisabled","outline","dark","white","black","StyleSheet","hairlineWidth","getSegmentedButtonTextColor","onSurfaceDisabled","onSurface","getSegmentedButtonColors","backgroundColor","borderColor","textColor","borderWidth"],"sources":["utils.ts"],"sourcesContent":["import { StyleSheet, ViewStyle } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  checked: boolean;\n};\n\nconst DEFAULT_PADDING = 9;\n\nexport const getSegmentedButtonDensityPadding = ({\n  density,\n}: {\n  density?: 'regular' | 'small' | 'medium' | 'high';\n}) => {\n  let padding = DEFAULT_PADDING;\n\n  switch (density) {\n    case 'small':\n      return padding - 2;\n    case 'medium':\n      return padding - 4;\n    case 'high':\n      return padding - 8;\n    default:\n      return padding;\n  }\n};\n\nexport const getDisabledSegmentedButtonStyle = ({\n  theme,\n  index,\n  buttons,\n}: {\n  theme: InternalTheme;\n  buttons: { disabled?: boolean }[];\n  index: number;\n}): ViewStyle => {\n  const width = getSegmentedButtonBorderWidth({ theme });\n  const isDisabled = buttons[index]?.disabled;\n  const isNextDisabled = buttons[index + 1]?.disabled;\n\n  if (!isDisabled && isNextDisabled) {\n    return {\n      borderRightWidth: width,\n    };\n  }\n  return {};\n};\n\nexport const getSegmentedButtonBorderRadius = ({\n  segment,\n  theme,\n}: {\n  theme: InternalTheme;\n  segment?: 'first' | 'last';\n}): ViewStyle => {\n  if (segment === 'first') {\n    return {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  } else if (segment === 'last') {\n    return {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    };\n  } else {\n    return {\n      borderRadius: 0,\n      ...(theme.isV3 && { borderRightWidth: 0 }),\n    };\n  }\n};\n\nconst getSegmentedButtonBackgroundColor = ({ checked, theme }: BaseProps) => {\n  if (checked) {\n    if (theme.isV3) {\n      return theme.colors.secondaryContainer;\n    } else {\n      return color(theme.colors.primary).alpha(0.12).rgb().string();\n    }\n  }\n  return 'transparent';\n};\n\nconst getSegmentedButtonBorderColor = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.surfaceDisabled;\n    }\n    return theme.colors.outline;\n  }\n  if (checked) {\n    return theme.colors.primary;\n  }\n\n  return color(theme.dark ? white : black)\n    .alpha(0.29)\n    .rgb()\n    .string();\n};\n\nconst getSegmentedButtonBorderWidth = ({\n  theme,\n}: Omit<BaseProps, 'disabled' | 'checked'>) => {\n  if (theme.isV3) {\n    return 1;\n  }\n\n  return StyleSheet.hairlineWidth;\n};\n\nconst getSegmentedButtonTextColor = ({\n  theme,\n  disabled,\n}: Omit<BaseProps, 'checked'>) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.onSurface;\n  } else {\n    if (disabled) {\n      return theme.colors.disabled;\n    }\n    return theme.colors.primary;\n  }\n};\n\nexport const getSegmentedButtonColors = ({\n  theme,\n  disabled,\n  checked,\n}: BaseProps) => {\n  const backgroundColor = getSegmentedButtonBackgroundColor({\n    theme,\n    checked,\n  });\n  const borderColor = getSegmentedButtonBorderColor({\n    theme,\n    disabled,\n    checked,\n  });\n  const textColor = getSegmentedButtonTextColor({ theme, disabled });\n  const borderWidth = getSegmentedButtonBorderWidth({ theme });\n\n  return { backgroundColor, borderColor, textColor, borderWidth };\n};\n"],"mappings":"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"}