{"version":3,"names":["defaultSize","Badge","children","size","style","theme","visible","rest","current","opacity","React","useRef","Animated","Value","fontScale","useWindowDimensions","isFirstRendering","animation","scale","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","isV3","colors","error","notification","restStyle","StyleSheet","flatten","textColor","onError","getContrastingColor","white","black","borderRadius","paddingHorizontal","color","fontSize","fonts","regular","lineHeight","height","minWidth","styles","container","withInternalTheme","create","alignSelf","textAlign","textAlignVertical","overflow"],"sources":["Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport { black, white } from '../styles/themes/v2/colors';\nimport type { InternalTheme } from '../types';\nimport getContrastingColor from '../utils/getContrastingColor';\n\nconst defaultSize = 20;\n\nexport type Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible?: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { fontScale } = useWindowDimensions();\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const {\n    backgroundColor = theme.isV3\n      ? theme.colors.error\n      : theme.colors?.notification,\n    ...restStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n\n  const textColor = theme.isV3\n    ? theme.colors.onError\n    : getContrastingColor(backgroundColor, white, black);\n\n  const borderRadius = size / 2;\n\n  const paddingHorizontal = theme.isV3 ? 3 : 4;\n\n  return (\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...(!theme.isV3 && theme.fonts.regular),\n          lineHeight: size / fontScale,\n          height: size,\n          minWidth: size,\n          borderRadius,\n          paddingHorizontal,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withInternalTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"}