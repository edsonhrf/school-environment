{"version":3,"names":["ToggleButtonRow","value","onValueChange","children","style","count","React","Children","styles","row","map","child","i","type","ToggleButton","cloneElement","button","first","last","middle","props","displayName","StyleSheet","create","flexDirection","borderWidth","hairlineWidth","borderTopRightRadius","borderBottomRightRadius","borderRadius","borderLeftWidth","borderTopLeftRadius","borderBottomLeftRadius"],"sources":["ToggleButtonRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\n\nimport ToggleButton from './ToggleButton';\nimport ToggleButtonGroup from './ToggleButtonGroup';\n\nexport type Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Toggle button row renders a group of toggle buttons in a row.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-row.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Row>\n *   );\n * };\n *\n * export default MyComponent;\n *\n *```\n */\nconst ToggleButtonRow = ({ value, onValueChange, children, style }: Props) => {\n  const count = React.Children.count(children);\n\n  return (\n    <ToggleButtonGroup value={value} onValueChange={onValueChange}>\n      <View style={[styles.row, style]}>\n        {React.Children.map(children, (child, i) => {\n          // @ts-expect-error: TypeScript complains about child.type but it doesn't matter\n          if (child && child.type === ToggleButton) {\n            // @ts-expect-error: We're sure that child is a React Element\n            return React.cloneElement(child, {\n              style: [\n                styles.button,\n                i === 0\n                  ? styles.first\n                  : i === count - 1\n                  ? styles.last\n                  : styles.middle,\n                // @ts-expect-error: We're sure that child is a React Element\n                child.props.style,\n              ],\n            });\n          }\n\n          return child;\n        })}\n      </View>\n    </ToggleButtonGroup>\n  );\n};\n\nToggleButtonRow.displayName = 'ToggleButton.Row';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n  button: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n\n  first: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  middle: {\n    borderRadius: 0,\n    borderLeftWidth: 0,\n  },\n\n  last: {\n    borderLeftWidth: 0,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n});\n\nexport default ToggleButtonRow;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonRow };\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AACA;AAAoD;AAAA;AAAA;AAkBpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAG,QAAsD;EAAA,IAArD;IAAEC,KAAK;IAAEC,aAAa;IAAEC,QAAQ;IAAEC;EAAa,CAAC;EACvE,MAAMC,KAAK,GAAGC,KAAK,CAACC,QAAQ,CAACF,KAAK,CAACF,QAAQ,CAAC;EAE5C,oBACE,oBAAC,0BAAiB;IAAC,KAAK,EAAEF,KAAM;IAAC,aAAa,EAAEC;EAAc,gBAC5D,oBAAC,iBAAI;IAAC,KAAK,EAAE,CAACM,MAAM,CAACC,GAAG,EAAEL,KAAK;EAAE,GAC9BE,KAAK,CAACC,QAAQ,CAACG,GAAG,CAACP,QAAQ,EAAE,CAACQ,KAAK,EAAEC,CAAC,KAAK;IAC1C;IACA,IAAID,KAAK,IAAIA,KAAK,CAACE,IAAI,KAAKC,qBAAY,EAAE;MACxC;MACA,oBAAOR,KAAK,CAACS,YAAY,CAACJ,KAAK,EAAE;QAC/BP,KAAK,EAAE,CACLI,MAAM,CAACQ,MAAM,EACbJ,CAAC,KAAK,CAAC,GACHJ,MAAM,CAACS,KAAK,GACZL,CAAC,KAAKP,KAAK,GAAG,CAAC,GACfG,MAAM,CAACU,IAAI,GACXV,MAAM,CAACW,MAAM;QACjB;QACAR,KAAK,CAACS,KAAK,CAAChB,KAAK;MAErB,CAAC,CAAC;IACJ;IAEA,OAAOO,KAAK;EACd,CAAC,CAAC,CACG,CACW;AAExB,CAAC;AAAC;AAEFX,eAAe,CAACqB,WAAW,GAAG,kBAAkB;AAEhD,MAAMb,MAAM,GAAGc,uBAAU,CAACC,MAAM,CAAC;EAC/Bd,GAAG,EAAE;IACHe,aAAa,EAAE;EACjB,CAAC;EACDR,MAAM,EAAE;IACNS,WAAW,EAAEH,uBAAU,CAACI;EAC1B,CAAC;EAEDT,KAAK,EAAE;IACLU,oBAAoB,EAAE,CAAC;IACvBC,uBAAuB,EAAE;EAC3B,CAAC;EAEDT,MAAM,EAAE;IACNU,YAAY,EAAE,CAAC;IACfC,eAAe,EAAE;EACnB,CAAC;EAEDZ,IAAI,EAAE;IACJY,eAAe,EAAE,CAAC;IAClBC,mBAAmB,EAAE,CAAC;IACtBC,sBAAsB,EAAE;EAC1B;AACF,CAAC,CAAC;AAAC,eAEYhC,eAAe,EAE9B;AAAA"}