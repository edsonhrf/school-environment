{"version":3,"names":["overflowLeft","center","overflowRight","tooltipWidth","width","layoutWidth","Dimensions","get","overflowBottom","childrenY","childrenHeight","tooltipHeight","height","layoutHeight","getTooltipXPosition","pageX","childrenX","childrenWidth","getTooltipYPosition","pageY","getTooltipPosition","children","tooltip","measured","left","top"],"sources":["utils.ts"],"sourcesContent":["import { Dimensions, LayoutRectangle } from 'react-native';\n\ntype ChildrenMeasurement = {\n  width: number;\n  height: number;\n  pageX: number;\n  pageY: number;\n};\n\ntype TooltipLayout = LayoutRectangle;\n\nexport type Measurement = {\n  children: ChildrenMeasurement;\n  tooltip: TooltipLayout;\n  measured: boolean;\n};\n\n/**\n * Return true when the tooltip center x-coordinate relative to the wrapped element is negative.\n * The tooltip will be placed at the starting x-coordinate from the wrapped element.\n */\nconst overflowLeft = (center: number): boolean => {\n  return center < 0;\n};\n\n/**\n * Return true when the tooltip center x-coordinate + tooltip width is greater than the layout width\n * The tooltip width will grow from right to left relative to the wrapped element.\n */\nconst overflowRight = (center: number, tooltipWidth: number): boolean => {\n  const { width: layoutWidth } = Dimensions.get('window');\n\n  return center + tooltipWidth > layoutWidth;\n};\n\n/**\n * Return true when the children y-coordinate + its height + tooltip height is greater than the layout height.\n * The tooltip will be placed at the top of the wrapped element.\n */\nconst overflowBottom = (\n  childrenY: number,\n  childrenHeight: number,\n  tooltipHeight: number\n): boolean => {\n  const { height: layoutHeight } = Dimensions.get('window');\n\n  return childrenY + childrenHeight + tooltipHeight > layoutHeight;\n};\n\nconst getTooltipXPosition = (\n  { pageX: childrenX, width: childrenWidth }: ChildrenMeasurement,\n  { width: tooltipWidth }: TooltipLayout\n): number => {\n  const center = childrenX + (childrenWidth - tooltipWidth) / 2;\n\n  if (overflowLeft(center)) return childrenX;\n\n  if (overflowRight(center, tooltipWidth))\n    return childrenX + childrenWidth - tooltipWidth;\n\n  return center;\n};\n\nconst getTooltipYPosition = (\n  { pageY: childrenY, height: childrenHeight }: ChildrenMeasurement,\n  { height: tooltipHeight }: TooltipLayout\n): number => {\n  if (overflowBottom(childrenY, childrenHeight, tooltipHeight))\n    return childrenY - tooltipHeight;\n\n  return childrenY + childrenHeight;\n};\n\nexport const getTooltipPosition = ({\n  children,\n  tooltip,\n  measured,\n}: Measurement): {} | { left: number; top: number } => {\n  if (!measured) return {};\n\n  return {\n    left: getTooltipXPosition(children, tooltip),\n    top: getTooltipYPosition(children, tooltip),\n  };\n};\n"],"mappings":";;;;;;AAAA;AAiBA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAIC,MAAc,IAAc;EAChD,OAAOA,MAAM,GAAG,CAAC;AACnB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAG,CAACD,MAAc,EAAEE,YAAoB,KAAc;EACvE,MAAM;IAAEC,KAAK,EAAEC;EAAY,CAAC,GAAGC,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAEvD,OAAON,MAAM,GAAGE,YAAY,GAAGE,WAAW;AAC5C,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMG,cAAc,GAAG,CACrBC,SAAiB,EACjBC,cAAsB,EACtBC,aAAqB,KACT;EACZ,MAAM;IAAEC,MAAM,EAAEC;EAAa,CAAC,GAAGP,uBAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAEzD,OAAOE,SAAS,GAAGC,cAAc,GAAGC,aAAa,GAAGE,YAAY;AAClE,CAAC;AAED,MAAMC,mBAAmB,GAAG,iBAGf;EAAA,IAFX;IAAEC,KAAK,EAAEC,SAAS;IAAEZ,KAAK,EAAEa;EAAmC,CAAC;EAAA,IAC/D;IAAEb,KAAK,EAAED;EAA4B,CAAC;EAEtC,MAAMF,MAAM,GAAGe,SAAS,GAAG,CAACC,aAAa,GAAGd,YAAY,IAAI,CAAC;EAE7D,IAAIH,YAAY,CAACC,MAAM,CAAC,EAAE,OAAOe,SAAS;EAE1C,IAAId,aAAa,CAACD,MAAM,EAAEE,YAAY,CAAC,EACrC,OAAOa,SAAS,GAAGC,aAAa,GAAGd,YAAY;EAEjD,OAAOF,MAAM;AACf,CAAC;AAED,MAAMiB,mBAAmB,GAAG,kBAGf;EAAA,IAFX;IAAEC,KAAK,EAAEV,SAAS;IAAEG,MAAM,EAAEF;EAAoC,CAAC;EAAA,IACjE;IAAEE,MAAM,EAAED;EAA6B,CAAC;EAExC,IAAIH,cAAc,CAACC,SAAS,EAAEC,cAAc,EAAEC,aAAa,CAAC,EAC1D,OAAOF,SAAS,GAAGE,aAAa;EAElC,OAAOF,SAAS,GAAGC,cAAc;AACnC,CAAC;AAEM,MAAMU,kBAAkB,GAAG,SAIqB;EAAA,IAJpB;IACjCC,QAAQ;IACRC,OAAO;IACPC;EACW,CAAC;EACZ,IAAI,CAACA,QAAQ,EAAE,OAAO,CAAC,CAAC;EAExB,OAAO;IACLC,IAAI,EAAEV,mBAAmB,CAACO,QAAQ,EAAEC,OAAO,CAAC;IAC5CG,GAAG,EAAEP,mBAAmB,CAACG,QAAQ,EAAEC,OAAO;EAC5C,CAAC;AACH,CAAC;AAAC"}