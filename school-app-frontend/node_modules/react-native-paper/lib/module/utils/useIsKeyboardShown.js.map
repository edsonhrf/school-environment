{"version":3,"names":["React","Keyboard","Platform","useIsKeyboardShown","onShow","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","OS","addListener","remove","removeListener"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAA2BC,QAAQ,QAAQ,cAAc;AAM1E,eAAe,SAASC,kBAAkB,OAA4B;EAAA,IAA3B;IAAEC,MAAM;IAAEC;EAAc,CAAC;EAClEL,KAAK,CAACM,SAAS,CAAC,MAAM;IACpB,IAAIC,oBAAyD;IAC7D,IAAIC,oBAAyD;IAC7D,IAAIC,mBAAwD;IAC5D,IAAIC,mBAAwD;IAE5D,IAAIR,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;MACzBJ,oBAAoB,GAAGN,QAAQ,CAACW,WAAW,CAAC,kBAAkB,EAAER,MAAM,CAAC;MACvEI,oBAAoB,GAAGP,QAAQ,CAACW,WAAW,CAAC,kBAAkB,EAAEP,MAAM,CAAC;IACzE,CAAC,MAAM;MACLI,mBAAmB,GAAGR,QAAQ,CAACW,WAAW,CAAC,iBAAiB,EAAER,MAAM,CAAC;MACrEM,mBAAmB,GAAGT,QAAQ,CAACW,WAAW,CAAC,iBAAiB,EAAEP,MAAM,CAAC;IACvE;IAEA,OAAO,MAAM;MACX,IAAIH,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;QAAA;QACzB,6BAAIJ,oBAAoB,kDAApB,sBAAsBM,MAAM,EAAE;UAChCN,oBAAoB,CAACM,MAAM,EAAE;QAC/B,CAAC,MAAM;UACL;UACAZ,QAAQ,CAACa,cAAc,CAAC,kBAAkB,EAAEV,MAAM,CAAC;QACrD;QAEA,6BAAII,oBAAoB,kDAApB,sBAAsBK,MAAM,EAAE;UAChCL,oBAAoB,CAACK,MAAM,EAAE;QAC/B,CAAC,MAAM;UACL;UACAZ,QAAQ,CAACa,cAAc,CAAC,kBAAkB,EAAET,MAAM,CAAC;QACrD;MACF,CAAC,MAAM;QAAA;QACL,4BAAII,mBAAmB,iDAAnB,qBAAqBI,MAAM,EAAE;UAC/BJ,mBAAmB,CAACI,MAAM,EAAE;QAC9B,CAAC,MAAM;UACL;UACAZ,QAAQ,CAACa,cAAc,CAAC,iBAAiB,EAAEV,MAAM,CAAC;QACpD;QAEA,4BAAIM,mBAAmB,iDAAnB,qBAAqBG,MAAM,EAAE;UAC/BH,mBAAmB,CAACG,MAAM,EAAE;QAC9B,CAAC,MAAM;UACL;UACAZ,QAAQ,CAACa,cAAc,CAAC,iBAAiB,EAAET,MAAM,CAAC;QACpD;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACA,MAAM,EAAED,MAAM,CAAC,CAAC;AACtB"}