{"version":3,"names":["React","Animated","StyleSheet","color","withInternalTheme","AnimatedText","HelperText","style","type","visible","theme","onLayout","padding","rest","current","shown","useRef","Value","textHeight","scale","animation","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","colors","dark","textColor","error","isV3","onSurface","text","alpha","rgb","string","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","create","fontSize","paddingVertical","paddingHorizontal"],"sources":["HelperText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { $Omit, InternalTheme } from '../types';\nimport AnimatedText from './Typography/AnimatedText';\n\nexport type Props = $Omit<\n  $Omit<React.ComponentPropsWithRef<typeof AnimatedText>, 'padding'>,\n  'type'\n> & {\n  /**\n   * Type of the helper text.\n   */\n  type: 'error' | 'info';\n  /**\n   * Whether to display the helper text.\n   */\n  visible?: boolean;\n  /**\n   * Whether to apply padding to the helper text.\n   */\n  padding?: 'none' | 'normal';\n  /**\n   * Text content of the HelperText.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n};\n\n/**\n * Helper text is used in conjuction with input elements to provide additional hints for the user.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/helper-text.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { HelperText, TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *    const onChangeText = text => setText(text);\n *\n *   const hasErrors = () => {\n *     return !text.includes('@');\n *   };\n *\n *  return (\n *     <View>\n *       <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n *       <HelperText type=\"error\" visible={hasErrors()}>\n *         Email address is invalid!\n *       </HelperText>\n *     </View>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst HelperText = ({\n  style,\n  type = 'info',\n  visible = true,\n  theme,\n  onLayout,\n  padding = 'normal',\n  ...rest\n}: Props) => {\n  const { current: shown } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  let { current: textHeight } = React.useRef<number>(0);\n\n  const { scale } = theme.animation;\n\n  const { maxFontSizeMultiplier = 1.5 } = rest;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show text\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      // hide text\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, shown]);\n\n  const handleTextLayout = (e: LayoutChangeEvent) => {\n    onLayout?.(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n\n  const { colors, dark } = theme;\n\n  const textColor =\n    type === 'error'\n      ? colors?.error\n      : color(theme.isV3 ? theme.colors.onSurface : theme?.colors?.text)\n          .alpha(dark ? 0.7 : 0.54)\n          .rgb()\n          .string();\n\n  return (\n    <AnimatedText\n      onLayout={handleTextLayout}\n      style={[\n        styles.text,\n        padding !== 'none' ? styles.padding : {},\n        {\n          color: textColor,\n          opacity: shown,\n          transform:\n            visible && type === 'error'\n              ? [\n                  {\n                    translateY: shown.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [-textHeight / 2, 0],\n                    }),\n                  },\n                ]\n              : [],\n        },\n        style,\n      ]}\n      maxFontSizeMultiplier={maxFontSizeMultiplier}\n      {...rest}\n    >\n      {rest.children}\n    </AnimatedText>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4,\n  },\n  padding: {\n    paddingHorizontal: 12,\n  },\n});\n\nexport default withInternalTheme(HelperText);\n"],"mappings":"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"}