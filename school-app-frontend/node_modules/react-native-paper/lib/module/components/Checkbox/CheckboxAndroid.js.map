{"version":3,"names":["React","Animated","StyleSheet","View","withInternalTheme","MaterialCommunityIcon","TouchableRipple","getAndroidSelectionControlColor","ANIMATION_DURATION","CheckboxAndroid","status","theme","disabled","onPress","testID","rest","current","scaleAnim","useRef","Value","isFirstRendering","animation","scale","useEffect","checked","sequence","timing","toValue","duration","useNativeDriver","start","indeterminate","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","borderWidth","interpolate","inputRange","outputRange","icon","styles","container","transform","absoluteFill","fillContainer","fill","borderColor","displayName","create","borderRadius","width","height","padding","alignItems","justifyContent","CheckboxAndroidWithTheme"],"sources":["CheckboxAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { getAndroidSelectionControlColor } from './utils';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 100;\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst CheckboxAndroid = ({\n  status,\n  theme,\n  disabled,\n  onPress,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: scaleAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    const checked = status === 'checked';\n\n    Animated.sequence([\n      Animated.timing(scaleAnim, {\n        toValue: 0.85,\n        duration: checked ? ANIMATION_DURATION * scale : 0,\n        useNativeDriver: false,\n      }),\n      Animated.timing(scaleAnim, {\n        toValue: 1,\n        duration: checked\n          ? ANIMATION_DURATION * scale\n          : ANIMATION_DURATION * scale * 1.75,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }, [status, scaleAnim, scale]);\n\n  const checked = status === 'checked';\n  const indeterminate = status === 'indeterminate';\n\n  const { rippleColor, selectionControlColor } =\n    getAndroidSelectionControlColor({\n      theme,\n      disabled,\n      checked,\n      customColor: rest.color,\n      customUncheckedColor: rest.uncheckedColor,\n    });\n\n  const borderWidth = scaleAnim.interpolate({\n    inputRange: [0.8, 1],\n    outputRange: [7, 0],\n  });\n\n  const icon = indeterminate\n    ? 'minus-box'\n    : checked\n    ? 'checkbox-marked'\n    : 'checkbox-blank-outline';\n\n  return (\n    <TouchableRipple\n      {...rest}\n      borderless\n      rippleColor={rippleColor}\n      onPress={onPress}\n      disabled={disabled}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{ disabled, checked }}\n      accessibilityLiveRegion=\"polite\"\n      style={styles.container}\n      testID={testID}\n    >\n      <Animated.View style={{ transform: [{ scale: scaleAnim }] }}>\n        <MaterialCommunityIcon\n          allowFontScaling={false}\n          name={icon}\n          size={24}\n          color={selectionControlColor}\n          direction=\"ltr\"\n        />\n        <View style={[StyleSheet.absoluteFill, styles.fillContainer]}>\n          <Animated.View\n            style={[\n              styles.fill,\n              { borderColor: selectionControlColor },\n              { borderWidth },\n            ]}\n          />\n        </View>\n      </Animated.View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxAndroid.displayName = 'Checkbox.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    width: 36,\n    height: 36,\n    padding: 6,\n  },\n  fillContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fill: {\n    height: 14,\n    width: 14,\n  },\n});\n\nexport default withInternalTheme(CheckboxAndroid);\n\n// @component-docs ignore-next-line\nconst CheckboxAndroidWithTheme = withInternalTheme(CheckboxAndroid);\n// @component-docs ignore-next-line\nexport { CheckboxAndroidWithTheme as CheckboxAndroid };\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,QAAQ,cAAc;AAEzD,SAASC,iBAAiB,QAAQ,oBAAoB;AAEtD,OAAOC,qBAAqB,MAAM,0BAA0B;AAC5D,OAAOC,eAAe,MAAM,oCAAoC;AAChE,SAASC,+BAA+B,QAAQ,SAAS;AAiCzD;AACA,MAAMC,kBAAkB,GAAG,GAAG;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,QAOX;EAAA,IAPY;IACvBC,MAAM;IACNC,KAAK;IACLC,QAAQ;IACRC,OAAO;IACPC,MAAM;IACN,GAAGC;EACE,CAAC;EACN,MAAM;IAAEC,OAAO,EAAEC;EAAU,CAAC,GAAGjB,KAAK,CAACkB,MAAM,CACzC,IAAIjB,QAAQ,CAACkB,KAAK,CAAC,CAAC,CAAC,CACtB;EACD,MAAMC,gBAAgB,GAAGpB,KAAK,CAACkB,MAAM,CAAU,IAAI,CAAC;EAEpD,MAAM;IACJG,SAAS,EAAE;MAAEC;IAAM;EACrB,CAAC,GAAGX,KAAK;EAETX,KAAK,CAACuB,SAAS,CAAC,MAAM;IACpB;IACA,IAAIH,gBAAgB,CAACJ,OAAO,EAAE;MAC5BI,gBAAgB,CAACJ,OAAO,GAAG,KAAK;MAChC;IACF;IAEA,MAAMQ,OAAO,GAAGd,MAAM,KAAK,SAAS;IAEpCT,QAAQ,CAACwB,QAAQ,CAAC,CAChBxB,QAAQ,CAACyB,MAAM,CAACT,SAAS,EAAE;MACzBU,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAEJ,OAAO,GAAGhB,kBAAkB,GAAGc,KAAK,GAAG,CAAC;MAClDO,eAAe,EAAE;IACnB,CAAC,CAAC,EACF5B,QAAQ,CAACyB,MAAM,CAACT,SAAS,EAAE;MACzBU,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAEJ,OAAO,GACbhB,kBAAkB,GAAGc,KAAK,GAC1Bd,kBAAkB,GAAGc,KAAK,GAAG,IAAI;MACrCO,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CAAC,CAACC,KAAK,EAAE;EACZ,CAAC,EAAE,CAACpB,MAAM,EAAEO,SAAS,EAAEK,KAAK,CAAC,CAAC;EAE9B,MAAME,OAAO,GAAGd,MAAM,KAAK,SAAS;EACpC,MAAMqB,aAAa,GAAGrB,MAAM,KAAK,eAAe;EAEhD,MAAM;IAAEsB,WAAW;IAAEC;EAAsB,CAAC,GAC1C1B,+BAA+B,CAAC;IAC9BI,KAAK;IACLC,QAAQ;IACRY,OAAO;IACPU,WAAW,EAAEnB,IAAI,CAACoB,KAAK;IACvBC,oBAAoB,EAAErB,IAAI,CAACsB;EAC7B,CAAC,CAAC;EAEJ,MAAMC,WAAW,GAAGrB,SAAS,CAACsB,WAAW,CAAC;IACxCC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC;EAEF,MAAMC,IAAI,GAAGX,aAAa,GACtB,WAAW,GACXP,OAAO,GACP,iBAAiB,GACjB,wBAAwB;EAE5B,oBACE,oBAAC,eAAe,eACVT,IAAI;IACR,UAAU;IACV,WAAW,EAAEiB,WAAY;IACzB,OAAO,EAAEnB,OAAQ;IACjB,QAAQ,EAAED,QAAS;IACnB,iBAAiB,EAAC,UAAU;IAC5B,kBAAkB,EAAE;MAAEA,QAAQ;MAAEY;IAAQ,CAAE;IAC1C,uBAAuB,EAAC,QAAQ;IAChC,KAAK,EAAEmB,MAAM,CAACC,SAAU;IACxB,MAAM,EAAE9B;EAAO,iBAEf,oBAAC,QAAQ,CAAC,IAAI;IAAC,KAAK,EAAE;MAAE+B,SAAS,EAAE,CAAC;QAAEvB,KAAK,EAAEL;MAAU,CAAC;IAAE;EAAE,gBAC1D,oBAAC,qBAAqB;IACpB,gBAAgB,EAAE,KAAM;IACxB,IAAI,EAAEyB,IAAK;IACX,IAAI,EAAE,EAAG;IACT,KAAK,EAAET,qBAAsB;IAC7B,SAAS,EAAC;EAAK,EACf,eACF,oBAAC,IAAI;IAAC,KAAK,EAAE,CAAC/B,UAAU,CAAC4C,YAAY,EAAEH,MAAM,CAACI,aAAa;EAAE,gBAC3D,oBAAC,QAAQ,CAAC,IAAI;IACZ,KAAK,EAAE,CACLJ,MAAM,CAACK,IAAI,EACX;MAAEC,WAAW,EAAEhB;IAAsB,CAAC,EACtC;MAAEK;IAAY,CAAC;EACf,EACF,CACG,CACO,CACA;AAEtB,CAAC;AAED7B,eAAe,CAACyC,WAAW,GAAG,kBAAkB;AAEhD,MAAMP,MAAM,GAAGzC,UAAU,CAACiD,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC;EACDR,aAAa,EAAE;IACbS,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDT,IAAI,EAAE;IACJM,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAejD,iBAAiB,CAACK,eAAe,CAAC;;AAEjD;AACA,MAAMiD,wBAAwB,GAAGtD,iBAAiB,CAACK,eAAe,CAAC;AACnE;AACA,SAASiD,wBAAwB,IAAIjD,eAAe"}