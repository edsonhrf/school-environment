{"version":3,"names":["React","Animated","StyleSheet","TouchableWithoutFeedback","View","withInternalTheme","Surface","CardActions","CardContent","CardCover","CardTitle","getCardColors","Card","elevation","cardElevation","onLongPress","onPress","mode","cardMode","children","style","theme","testID","accessible","rest","isMode","useCallback","modeToCompare","current","useRef","Value","elevationDarkAdaptive","animation","dark","roundness","isV3","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","computedElevation","backgroundColor","borderColor","borderRadius","styles","resetElevation","outline","undefined","innerContainer","index","cloneElement","Content","Actions","Cover","Title","create","flexShrink","borderWidth","position","width","height","zIndex"],"sources":["Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Surface from '../Surface';\nimport CardActions from './CardActions';\nimport CardContent from './CardContent';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle from './CardTitle';\nimport { getCardColors } from './utils';\n\ntype OutlinedCardProps = {\n  mode: 'outlined';\n  elevation?: never;\n};\n\ntype ElevatedCardProps = {\n  mode?: 'elevated';\n  elevation?: number;\n};\n\ntype ContainedCardProps = {\n  mode?: 'contained';\n  elevation?: never;\n};\n\ntype HandlePressType = 'in' | 'out';\n\ntype Mode = 'elevated' | 'outlined' | 'contained';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Changes Card shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Mode of the Card.\n   * - `elevated` - Card with elevation.\n   * - `contained` - Card with without outline and elevation @supported Available in v5.x with theme version 3\n   * - `outlined` - Card with an outline.\n   */\n  mode?: Mode;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/card-1.png\" />\n *     <figcaption>Elevated card</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/card-2.png\" />\n *     <figcaption>Outlined card</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/card-3.png\" />\n *     <figcaption>Contained card</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  mode: cardMode = 'elevated',\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}: (OutlinedCardProps | ElevatedCardProps | ContainedCardProps) & Props) => {\n  const isMode = React.useCallback(\n    (modeToCompare: Mode) => {\n      return cardMode === modeToCompare;\n    },\n    [cardMode]\n  );\n\n  // Default animated value\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  // Dark adaptive animated value, used in case of toggling the theme,\n  // it prevents animating the background with native drivers inside Surface\n  const { current: elevationDarkAdaptive } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n  const { animation, dark, mode, roundness, isV3 } = theme;\n\n  const prevDarkRef = React.useRef<boolean>(dark);\n  React.useEffect(() => {\n    prevDarkRef.current = dark;\n  });\n\n  const prevDark = prevDarkRef.current;\n  const isAdaptiveMode = mode === 'adaptive';\n  const animationDuration = 150 * animation.scale;\n\n  React.useEffect(() => {\n    /**\n     * Resets animations values if updating to dark adaptive mode,\n     * otherwise, any card that is in the middle of animation while\n     * toggling the theme will stay at that animated value until\n     * the next press-in\n     */\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [\n    prevDark,\n    dark,\n    isAdaptiveMode,\n    cardElevation,\n    elevation,\n    elevationDarkAdaptive,\n  ]);\n\n  const runElevationAnimation = (pressType: HandlePressType) => {\n    const isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? (isV3 ? 2 : 8) : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? (isV3 ? 2 : 8) : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: true,\n      }).start();\n    }\n  };\n\n  const handlePressIn = () => {\n    runElevationAnimation('in');\n  };\n\n  const handlePressOut = () => {\n    runElevationAnimation('out');\n  };\n\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, (child) =>\n    React.isValidElement(child) && child.type\n      ? (child.type as any).displayName\n      : null\n  );\n  const computedElevation =\n    dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n\n  const { backgroundColor, borderColor } = getCardColors({\n    theme,\n    mode: cardMode,\n  });\n\n  const borderRadius = (isV3 ? 3 : 1) * roundness;\n\n  return (\n    <Surface\n      style={[\n        {\n          borderRadius,\n        },\n        isV3 && { backgroundColor },\n        !isV3 && isMode('outlined')\n          ? styles.resetElevation\n          : {\n              elevation: computedElevation as unknown as number,\n            },\n        style,\n      ]}\n      theme={theme}\n      {...(isV3 && {\n        elevation: isMode('elevated') ? computedElevation : 0,\n      })}\n      {...rest}\n    >\n      {isMode('outlined') && (\n        <View\n          pointerEvents=\"none\"\n          style={[\n            {\n              borderRadius: roundness,\n              borderColor,\n            },\n            styles.outline,\n          ]}\n        />\n      )}\n      <TouchableWithoutFeedback\n        delayPressIn={0}\n        disabled={!(onPress || onLongPress)}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        onPressIn={onPress || onLongPress ? handlePressIn : undefined}\n        onPressOut={onPress || onLongPress ? handlePressOut : undefined}\n        testID={testID}\n        accessible={accessible}\n      >\n        <View style={styles.innerContainer}>\n          {React.Children.map(children, (child, index) =>\n            React.isValidElement(child)\n              ? React.cloneElement(child as React.ReactElement<any>, {\n                  index,\n                  total,\n                  siblings,\n                })\n              : child\n          )}\n        </View>\n      </TouchableWithoutFeedback>\n    </Surface>\n  );\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexShrink: 1,\n  },\n  outline: {\n    borderWidth: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    zIndex: 2,\n  },\n  resetElevation: {\n    elevation: 0,\n  },\n});\n\nexport default withInternalTheme(Card);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SACEC,QAAQ,EAERC,UAAU,EACVC,wBAAwB,EACxBC,IAAI,QAEC,cAAc;AAErB,SAASC,iBAAiB,QAAQ,oBAAoB;AAEtD,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA,OAAOC,SAAS,MAAM,aAAa;AACnC;AACA,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,aAAa,QAAQ,SAAS;AA4DvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,IAAI,GAAG,QAW+D;EAAA,IAX9D;IACZC,SAAS,EAAEC,aAAa,GAAG,CAAC;IAC5BC,WAAW;IACXC,OAAO;IACPC,IAAI,EAAEC,QAAQ,GAAG,UAAU;IAC3BC,QAAQ;IACRC,KAAK;IACLC,KAAK;IACLC,MAAM;IACNC,UAAU;IACV,GAAGC;EACiE,CAAC;EACrE,MAAMC,MAAM,GAAGzB,KAAK,CAAC0B,WAAW,CAC7BC,aAAmB,IAAK;IACvB,OAAOT,QAAQ,KAAKS,aAAa;EACnC,CAAC,EACD,CAACT,QAAQ,CAAC,CACX;;EAED;EACA,MAAM;IAAEU,OAAO,EAAEf;EAAU,CAAC,GAAGb,KAAK,CAAC6B,MAAM,CACzC,IAAI5B,QAAQ,CAAC6B,KAAK,CAAChB,aAAa,CAAC,CAClC;EACD;EACA;EACA,MAAM;IAAEc,OAAO,EAAEG;EAAsB,CAAC,GAAG/B,KAAK,CAAC6B,MAAM,CACrD,IAAI5B,QAAQ,CAAC6B,KAAK,CAAChB,aAAa,CAAC,CAClC;EACD,MAAM;IAAEkB,SAAS;IAAEC,IAAI;IAAEhB,IAAI;IAAEiB,SAAS;IAAEC;EAAK,CAAC,GAAGd,KAAK;EAExD,MAAMe,WAAW,GAAGpC,KAAK,CAAC6B,MAAM,CAAUI,IAAI,CAAC;EAC/CjC,KAAK,CAACqC,SAAS,CAAC,MAAM;IACpBD,WAAW,CAACR,OAAO,GAAGK,IAAI;EAC5B,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAGF,WAAW,CAACR,OAAO;EACpC,MAAMW,cAAc,GAAGtB,IAAI,KAAK,UAAU;EAC1C,MAAMuB,iBAAiB,GAAG,GAAG,GAAGR,SAAS,CAACS,KAAK;EAE/CzC,KAAK,CAACqC,SAAS,CAAC,MAAM;IACpB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAIJ,IAAI,IAAIM,cAAc,IAAI,CAACD,QAAQ,EAAE;MACvCzB,SAAS,CAAC6B,QAAQ,CAAC5B,aAAa,CAAC;MACjCiB,qBAAqB,CAACW,QAAQ,CAAC5B,aAAa,CAAC;IAC/C;EACF,CAAC,EAAE,CACDwB,QAAQ,EACRL,IAAI,EACJM,cAAc,EACdzB,aAAa,EACbD,SAAS,EACTkB,qBAAqB,CACtB,CAAC;EAEF,MAAMY,qBAAqB,GAAIC,SAA0B,IAAK;IAC5D,MAAMC,aAAa,GAAGD,SAAS,KAAK,IAAI;IACxC,IAAIX,IAAI,IAAIM,cAAc,EAAE;MAC1BtC,QAAQ,CAAC6C,MAAM,CAACf,qBAAqB,EAAE;QACrCgB,OAAO,EAAEF,aAAa,GAAIV,IAAI,GAAG,CAAC,GAAG,CAAC,GAAIrB,aAAa;QACvDkC,QAAQ,EAAER,iBAAiB;QAC3BS,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,KAAK,EAAE;IACZ,CAAC,MAAM;MACLjD,QAAQ,CAAC6C,MAAM,CAACjC,SAAS,EAAE;QACzBkC,OAAO,EAAEF,aAAa,GAAIV,IAAI,GAAG,CAAC,GAAG,CAAC,GAAIrB,aAAa;QACvDkC,QAAQ,EAAER,iBAAiB;QAC3BS,eAAe,EAAE;MACnB,CAAC,CAAC,CAACC,KAAK,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAM;IAC1BR,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMS,cAAc,GAAG,MAAM;IAC3BT,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMU,KAAK,GAAGrD,KAAK,CAACsD,QAAQ,CAACC,KAAK,CAACpC,QAAQ,CAAC;EAC5C,MAAMqC,QAAQ,GAAGxD,KAAK,CAACsD,QAAQ,CAACG,GAAG,CAACtC,QAAQ,EAAGuC,KAAK,IAClD,aAAA1D,KAAK,CAAC2D,cAAc,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,IAAI,GACpCF,KAAK,CAACE,IAAI,CAASC,WAAW,GAC/B,IAAI,CACT;EACD,MAAMC,iBAAiB,GACrB7B,IAAI,IAAIM,cAAc,GAAGR,qBAAqB,GAAGlB,SAAS;EAE5D,MAAM;IAAEkD,eAAe;IAAEC;EAAY,CAAC,GAAGrD,aAAa,CAAC;IACrDU,KAAK;IACLJ,IAAI,EAAEC;EACR,CAAC,CAAC;EAEF,MAAM+C,YAAY,GAAG,CAAC9B,IAAI,GAAG,CAAC,GAAG,CAAC,IAAID,SAAS;EAE/C,oBACE,oBAAC,OAAO;IACN,KAAK,EAAE,CACL;MACE+B;IACF,CAAC,EACD9B,IAAI,IAAI;MAAE4B;IAAgB,CAAC,EAC3B,CAAC5B,IAAI,IAAIV,MAAM,CAAC,UAAU,CAAC,GACvByC,MAAM,CAACC,cAAc,GACrB;MACEtD,SAAS,EAAEiD;IACb,CAAC,EACL1C,KAAK,CACL;IACF,KAAK,EAAEC;EAAM,GACRc,IAAI,IAAI;IACXtB,SAAS,EAAEY,MAAM,CAAC,UAAU,CAAC,GAAGqC,iBAAiB,GAAG;EACtD,CAAC,EACGtC,IAAI,GAEPC,MAAM,CAAC,UAAU,CAAC,iBACjB,oBAAC,IAAI;IACH,aAAa,EAAC,MAAM;IACpB,KAAK,EAAE,CACL;MACEwC,YAAY,EAAE/B,SAAS;MACvB8B;IACF,CAAC,EACDE,MAAM,CAACE,OAAO;EACd,EAEL,eACD,oBAAC,wBAAwB;IACvB,YAAY,EAAE,CAAE;IAChB,QAAQ,EAAE,EAAEpD,OAAO,IAAID,WAAW,CAAE;IACpC,WAAW,EAAEA,WAAY;IACzB,OAAO,EAAEC,OAAQ;IACjB,SAAS,EAAEA,OAAO,IAAID,WAAW,GAAGoC,aAAa,GAAGkB,SAAU;IAC9D,UAAU,EAAErD,OAAO,IAAID,WAAW,GAAGqC,cAAc,GAAGiB,SAAU;IAChE,MAAM,EAAE/C,MAAO;IACf,UAAU,EAAEC;EAAW,gBAEvB,oBAAC,IAAI;IAAC,KAAK,EAAE2C,MAAM,CAACI;EAAe,GAChCtE,KAAK,CAACsD,QAAQ,CAACG,GAAG,CAACtC,QAAQ,EAAE,CAACuC,KAAK,EAAEa,KAAK,KACzC,aAAAvE,KAAK,CAAC2D,cAAc,CAACD,KAAK,CAAC,gBACvB1D,KAAK,CAACwE,YAAY,CAACd,KAAK,EAA6B;IACnDa,KAAK;IACLlB,KAAK;IACLG;EACF,CAAC,CAAC,GACFE,KAAK,CACV,CACI,CACkB,CACnB;AAEd,CAAC;;AAED;AACA9C,IAAI,CAAC6D,OAAO,GAAGjE,WAAW;AAC1B;AACAI,IAAI,CAAC8D,OAAO,GAAGnE,WAAW;AAC1B;AACAK,IAAI,CAAC+D,KAAK,GAAGlE,SAAS;AACtB;AACAG,IAAI,CAACgE,KAAK,GAAGlE,SAAS;AAEtB,MAAMwD,MAAM,GAAGhE,UAAU,CAAC2E,MAAM,CAAC;EAC/BP,cAAc,EAAE;IACdQ,UAAU,EAAE;EACd,CAAC;EACDV,OAAO,EAAE;IACPW,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE;EACV,CAAC;EACDhB,cAAc,EAAE;IACdtD,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAeR,iBAAiB,CAACO,IAAI,CAAC"}