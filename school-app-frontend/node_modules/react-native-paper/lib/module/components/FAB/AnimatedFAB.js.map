{"version":3,"names":["React","Animated","Easing","I18nManager","Platform","ScrollView","StyleSheet","Text","View","color","withInternalTheme","Icon","Surface","TouchableRipple","AnimatedText","getCombinedStyles","getFABColors","SIZE","SCALE","AnimatedFAB","icon","label","accessibilityLabel","accessibilityState","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","isV3","testID","animateFrom","extended","iconMode","variant","rest","isIOS","OS","isAnimatedFromRight","isIconStatic","isRTL","current","visibility","useRef","Value","animFAB","animation","scale","textWidth","setTextWidth","useState","textHeight","setTextHeight","borderRadius","useEffect","timing","toValue","duration","useNativeDriver","start","backgroundColor","foregroundColor","rippleColor","alpha","rgb","string","extendedWidth","distance","easing","linear","onTextLayout","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","font","fonts","labelLarge","medium","textStyle","md2Elevation","md3Elevation","newAccessibilityState","opacity","transform","elevation","styles","container","scaleY","interpolate","inputRange","outputRange","standard","absoluteFill","shadowWrapper","shadow","innerWrapper","iconWrapper","undefined","minWidth","top","translateX","uppercaseLabel","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"sources":["AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  Text,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport type { IconSource } from '../Icon';\nimport Icon from '../Icon';\nimport Surface from '../Surface';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport AnimatedText from '../Typography/AnimatedText';\nimport { getCombinedStyles, getFABColors } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\nexport type Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  /**\n   * @supported Available in v3.x with theme version 3\n   *\n   * Color mappings variant for combinations of container and icon colors.\n   */\n  variant?: 'primary' | 'secondary' | 'tertiary' | 'surface';\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst SCALE = 0.9;\n\n/**\n * An animated, extending horizontally floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/animated-fab.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import React from 'react';\n * import {\n *   StyleProp,\n *   ViewStyle,\n *   Animated,\n *   StyleSheet,\n *   Platform,\n *   ScrollView,\n *   Text,\n *   SafeAreaView,\n *   I18nManager,\n * } from 'react-native';\n * import { AnimatedFAB } from 'react-native-paper';\n *\n * const MyComponent = ({\n *   animatedValue,\n *   visible,\n *   extended,\n *   label,\n *   animateFrom,\n *   style,\n *   iconMode,\n * }) => {\n *   const [isExtended, setIsExtended] = React.useState(true);\n *\n *   const isIOS = Platform.OS === 'ios';\n *\n *   const onScroll = ({ nativeEvent }) => {\n *     const currentScrollPosition =\n *       Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n *\n *     setIsExtended(currentScrollPosition <= 0);\n *   };\n *\n *   const fabStyle = { [animateFrom]: 16 };\n *\n *   return (\n *     <SafeAreaView style={styles.container}>\n *       <ScrollView onScroll={onScroll}>\n *         {[...new Array(100).keys()].map((_, i) => (\n *           <Text>{i}</Text>\n *         ))}\n *       </ScrollView>\n *       <AnimatedFAB\n *         icon={'plus'}\n *         label={'Label'}\n *         extended={isExtended}\n *         onPress={() => console.log('Pressed')}\n *         visible={visible}\n *         animateFrom={'right'}\n *         iconMode={'static'}\n *         style={[styles.fabStyle, style, fabStyle]}\n *       />\n *     </SafeAreaView>\n *   );\n * };\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flexGrow: 1,\n *   },\n *   fabStyle: {\n *     bottom: 16,\n *     right: 16,\n *     position: 'absolute',\n *   },\n * });\n * ```\n */\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = !theme.isV3,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  variant = 'primary',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { isV3, animation } = theme;\n  const { scale } = animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  const borderRadius = SIZE / (isV3 ? 3.5 : 2);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const { backgroundColor, foregroundColor } = getFABColors({\n    theme,\n    variant,\n    disabled,\n    customColor,\n    style,\n  });\n\n  const rippleColor = color(foregroundColor).alpha(0.12).rgb().string();\n\n  const extendedWidth = textWidth + SIZE + borderRadius;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - borderRadius\n    : textWidth + borderRadius;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  const font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;\n\n  const textStyle = {\n    color: foregroundColor,\n    ...font,\n  };\n\n  const md2Elevation = disabled || !isIOS ? 0 : 6;\n  const md3Elevation = disabled || !isIOS ? 0 : 3;\n\n  const newAccessibilityState = { ...accessibilityState, disabled };\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            borderRadius,\n          },\n          !isV3 && {\n            elevation: md2Elevation,\n          },\n          styles.container,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      {...(isV3 && { elevation: md3Elevation })}\n    >\n      <Animated.View\n        style={[\n          !isV3 && {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n          { borderRadius },\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              disabled ? styles.disabled : styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n                borderRadius,\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              disabled ? styles.disabled : styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    borderRadius,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          style={[styles.innerWrapper, { borderRadius }]}\n        >\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n                borderRadius,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              accessibilityRole=\"button\"\n              accessibilityState={newAccessibilityState}\n              testID={testID}\n              style={{ borderRadius }}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                    borderRadius,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          variant=\"labelLarge\"\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? textWidth - SIZE + borderRadius / (isV3 ? 1 : 2)\n                : borderRadius,\n            },\n            {\n              minWidth: textWidth,\n              top: -SIZE / 2 - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            textStyle,\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withInternalTheme(AnimatedFAB);\n"],"mappings":"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"}