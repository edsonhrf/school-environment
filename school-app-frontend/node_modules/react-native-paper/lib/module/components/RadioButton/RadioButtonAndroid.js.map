{"version":3,"names":["React","Animated","StyleSheet","View","withInternalTheme","getAndroidSelectionControlColor","TouchableRipple","RadioButtonContext","handlePress","isChecked","BORDER_WIDTH","RadioButtonAndroid","disabled","onPress","theme","value","status","testID","rest","current","borderAnim","useRef","Value","radioAnim","isFirstRendering","scale","animation","useEffect","setValue","timing","toValue","duration","useNativeDriver","start","context","checked","contextValue","rippleColor","selectionControlColor","customColor","color","customUncheckedColor","uncheckedColor","undefined","onValueChange","styles","container","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin","RadioButtonAndroidWithTheme"],"sources":["RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, InternalTheme } from '../../types';\nimport { getAndroidSelectionControlColor } from '../Checkbox/utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress, isChecked } from './utils';\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android, but can be used\n * on any platform.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nconst RadioButtonAndroid = ({\n  disabled,\n  onPress,\n  theme,\n  value,\n  status,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: borderAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(BORDER_WIDTH)\n  );\n\n  const { current: radioAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(1)\n  );\n\n  const isFirstRendering = React.useRef<boolean>(true);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    // Do not run animation on very first rendering\n    if (isFirstRendering.current) {\n      isFirstRendering.current = false;\n      return;\n    }\n\n    if (status === 'checked') {\n      radioAnim.setValue(1.2);\n\n      Animated.timing(radioAnim, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      borderAnim.setValue(10);\n\n      Animated.timing(borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150 * scale,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [status, borderAnim, radioAnim, scale]);\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        const checked =\n          isChecked({\n            contextValue: context?.value,\n            status,\n            value,\n          }) === 'checked';\n\n        const { rippleColor, selectionControlColor } =\n          getAndroidSelectionControlColor({\n            theme,\n            disabled,\n            checked,\n            customColor: rest.color,\n            customUncheckedColor: rest.uncheckedColor,\n          });\n\n        return (\n          <TouchableRipple\n            {...rest}\n            borderless\n            rippleColor={rippleColor}\n            onPress={\n              disabled\n                ? undefined\n                : () => {\n                    handlePress({\n                      onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                    });\n                  }\n            }\n            accessibilityRole=\"radio\"\n            accessibilityState={{ disabled, checked }}\n            accessibilityLiveRegion=\"polite\"\n            style={styles.container}\n            testID={testID}\n          >\n            <Animated.View\n              style={[\n                styles.radio,\n                {\n                  borderColor: selectionControlColor,\n                  borderWidth: borderAnim,\n                },\n              ]}\n            >\n              {checked ? (\n                <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n                  <Animated.View\n                    style={[\n                      styles.dot,\n                      {\n                        backgroundColor: selectionControlColor,\n                        transform: [{ scale: radioAnim }],\n                      },\n                    ]}\n                  />\n                </View>\n              ) : null}\n            </Animated.View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonAndroid.displayName = 'RadioButton.Android';\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default withInternalTheme(RadioButtonAndroid);\n\n// @component-docs ignore-next-line\nconst RadioButtonAndroidWithTheme = withInternalTheme(RadioButtonAndroid);\n// @component-docs ignore-next-line\nexport { RadioButtonAndroidWithTheme as RadioButtonAndroid };\n"],"mappings":"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"}