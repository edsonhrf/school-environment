{"version":3,"names":["React","Animated","TextInput","NativeTextInput","withInternalTheme","TextInputAffix","TextInputIcon","TextInputFlat","TextInputOutlined","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","forwardRef","ref","mode","dense","disabled","error","errorProp","multiline","editable","render","props","rest","isControlled","value","undefined","validInputValue","defaultValue","current","labeled","useRef","Value","focused","setFocused","useState","placeholder","setPlaceholder","uncontrolledValue","setUncontrolledValue","labelLayout","setLabelLayout","measured","width","height","leftLayout","setLeftLayout","rightLayout","setRightLayout","timer","root","scale","theme","animation","useImperativeHandle","focus","clear","setNativeProps","args","isFocused","blur","forceFocus","useEffect","timing","toValue","duration","useNativeDriver","start","label","setTimeout","clearTimeout","onLeftAffixLayoutChange","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","onFocus","handleBlur","onBlur","handleChangeText","onChangeText","handleLayoutAnimatedText","e","maxFontSizeMultiplier","Icon","Affix"],"sources":["TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleProp,\n  TextInput as NativeTextInput,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputOutlined from './TextInputOutlined';\nimport type { RenderProps, TextInputLabelProp } from './types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type Props = React.ComponentPropsWithRef<typeof NativeTextInput> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors?.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input.\n   */\n  selectionColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * @supported Available in v5.x\n   * Color of the text in the input.\n   */\n  textColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * @supported Available in v5.x\n   * Pass style to override the default style of outlined wrapper.\n   * Overrides style when mode is set to `outlined`\n   * Example: `borderRadius`, `borderColor`\n   */\n  outlineStyle?: StyleProp<ViewStyle>;\n  /**\n   * @supported Available in v5.x\n   * Pass style to override the default style of underlined wrapper.\n   * Overrides style when mode is set to `flat`\n   * Example: `borderRadius`, `borderColor`\n   */\n  underlineStyle?: StyleProp<ViewStyle>;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    Props & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nconst TextInput = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      render = (props: RenderProps) => <NativeTextInput {...props} />,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ' '\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = rest.theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // If the user wants to use the contextMenu, when changing the placeholder, the contextMenu is closed\n        // This is a workaround to mitigate this behavior in scenarios where the placeholder is not specified.\n        if (rest.placeholder) {\n          // Set the placeholder in a delay to offset the label animation\n          // If we show it immediately, they'll overlap and look ugly\n          timer.current = setTimeout(\n            () => setPlaceholder(rest.placeholder),\n            50\n          ) as unknown as NodeJS.Timeout;\n        }\n      } else {\n        // hidePlaceholder\n\n        // Issue: https://github.com/callstack/react-native-paper/issues/3138\n        // Description:   Changing the placeholder text value dynamically,\n        //                within multiline input on iOS, doesn't work properly –\n        //                the placeholder is not displayed initially.\n        // Root cause:    Placeholder initial value, which has length 0.\n        // More context:  The issue was also reproduced in react-native, using its own TextInput.\n        // Workaround:    Set an empty space character in the default value.\n        setPlaceholder(' ');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        {\n          Animated.timing(labeled, {\n            toValue: 1,\n            duration: FOCUS_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setLeftLayout({\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      });\n    };\n\n    const onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setRightLayout({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      });\n    };\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n      setLabelLayout({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      });\n    };\n    const forceFocus = () => root.current?.focus();\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default withInternalTheme(TextInput);\n"],"mappings":"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"}