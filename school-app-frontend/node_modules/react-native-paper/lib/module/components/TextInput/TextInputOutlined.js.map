{"version":3,"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","AdornmentType","AdornmentSide","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_DENSE_HEIGHT_OUTLINED","LABEL_PADDING_TOP_DENSE","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","getOutlinedInputColors","getConstants","InputLabel","LabelBackground","TextInputOutlined","disabled","editable","label","error","selectionColor","underlineColor","_underlineColor","outlineColor","customOutlineColor","activeOutlineColor","outlineStyle","textColor","dense","style","theme","render","props","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","testID","rest","adornmentConfig","colors","isV3","roundness","font","fonts","bodyLarge","regular","hasActiveOutline","focused","INPUT_PADDING_HORIZONTAL","MIN_HEIGHT","ADORNMENT_OFFSET","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","flatten","inputTextColor","activeColor","placeholderColor","errorColor","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","placeholderStyle","position","paddingHorizontal","labelProps","wiggleOffsetX","maxFontSizeMultiplier","minHeight","outlinedHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","labelContainer","paddingTop","ref","placeholder","underlineColorAndroid","input","color","textAlignVertical","outline","Outline","borderRadius","borderWidth","borderColor","create","top","bottom","paddingBottom","flexGrow","margin","zIndex"],"sources":["TextInputOutlined.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n  ColorValue,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  LABEL_PADDING_TOP,\n  MIN_DENSE_HEIGHT_OUTLINED,\n  LABEL_PADDING_TOP_DENSE,\n} from './constants';\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n  getOutlinedInputColors,\n  getConstants,\n} from './helpers';\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nconst TextInputOutlined = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor: _underlineColor,\n  outlineColor: customOutlineColor,\n  activeOutlineColor,\n  outlineStyle,\n  textColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  testID = 'text-input-outlined',\n  ...rest\n}: ChildTextInputProps) => {\n  const adornmentConfig = getAdornmentConfig({ left, right });\n\n  const { colors, isV3, roundness } = theme;\n  const font = isV3 ? theme.fonts.bodyLarge : theme.fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const { INPUT_PADDING_HORIZONTAL, MIN_HEIGHT, ADORNMENT_OFFSET } =\n    getConstants(isV3);\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    lineHeight,\n    height,\n    backgroundColor = colors?.background,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const {\n    inputTextColor,\n    activeColor,\n    outlineColor,\n    placeholderColor,\n    errorColor,\n  } = getOutlinedInputColors({\n    activeOutlineColor,\n    customOutlineColor,\n    textColor,\n    disabled,\n    error,\n    theme,\n  });\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.getConstants().isRTL ? 1 : -1) *\n    (labelHalfWidth -\n      (labelScale * labelWidth) / 2 -\n      (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n  let labelTranslationXOffset = 0;\n  const isAdornmentLeftIcon = adornmentConfig.some(\n    ({ side, type }) =>\n      side === AdornmentSide.Left && type === AdornmentType.Icon\n  );\n  if (isAdornmentLeftIcon) {\n    labelTranslationXOffset =\n      (I18nManager.getConstants().isRTL ? -1 : 1) *\n      (ADORNMENT_SIZE + ADORNMENT_OFFSET - (isV3 ? 0 : 8));\n  }\n\n  const minInputHeight =\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    LABEL_PADDING_TOP\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: LABEL_PADDING_TOP,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    lineHeight,\n    label,\n    scale: fontScale,\n    isAndroid: Platform.OS === 'android',\n    styles: StyleSheet.flatten(\n      dense ? styles.inputOutlinedDense : styles.inputOutlined\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const placeholderStyle = {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  };\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    backgroundColor: backgroundColor as ColorValue,\n    errorColor,\n    labelTranslationXOffset,\n    roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n    testID,\n  };\n\n  const minHeight = (height ||\n    (dense ? MIN_DENSE_HEIGHT_OUTLINED : MIN_HEIGHT)) as number;\n\n  const outlinedHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE / 2 : LABEL_PADDING_TOP) : 0);\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: leftLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: rightLayout.height || 0,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n  const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n    height: outlinedHeight,\n    affixHeight: ADORNMENT_SIZE,\n    labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n  });\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      mode: 'outlined',\n      isV3,\n    });\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Icon]: iconTopPosition,\n      [AdornmentType.Affix]: affixTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, lineHeight, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={viewStyle}>\n      {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n      <Outline\n        isV3={isV3}\n        style={outlineStyle}\n        roundness={roundness}\n        hasActiveOutline={hasActiveOutline}\n        focused={parentState.focused}\n        activeColor={activeColor}\n        outlineColor={outlineColor}\n        backgroundColor={backgroundColor}\n      />\n      <View>\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              paddingTop: LABEL_PADDING_TOP,\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel\n            parentState={parentState}\n            labelProps={labelProps}\n            labelBackground={LabelBackground}\n            maxFontSizeMultiplier={rest.maxFontSizeMultiplier}\n          />\n          {render?.({\n            testID,\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label ? parentState.placeholder : rest.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              !multiline || (multiline && height)\n                ? { height: inputHeight }\n                : {},\n              paddingOut,\n              {\n                ...font,\n                fontSize,\n                lineHeight,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.getConstants().isRTL\n                  ? 'right'\n                  : 'left',\n                paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          } as RenderProps)}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    </View>\n  );\n};\n\nexport default TextInputOutlined;\n\ntype OutlineProps = {\n  isV3: boolean;\n  activeColor: string;\n  backgroundColor: ColorValue;\n  hasActiveOutline?: boolean;\n  focused?: boolean;\n  outlineColor?: string;\n  roundness?: number;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst Outline = ({\n  isV3,\n  activeColor,\n  backgroundColor,\n  hasActiveOutline,\n  focused,\n  outlineColor,\n  roundness,\n  style,\n}: OutlineProps) => (\n  <View\n    testID=\"text-input-outline\"\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: roundness,\n        borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n      style,\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  labelContainer: {\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"],"mappings":"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"}