{"version":3,"names":["color","MD3LightTheme","AdornmentSide","AdornmentType","ADORNMENT_SIZE","MD2_ADORNMENT_OFFSET","MD2_AFFIX_OFFSET","MD2_FLAT_INPUT_OFFSET","MD2_ICON_OFFSET","MD2_INPUT_PADDING_HORIZONTAL","MD2_LABEL_PADDING_HORIZONTAL","MD2_LABEL_PADDING_TOP","MD2_MIN_HEIGHT","MD2_OUTLINED_INPUT_OFFSET","MD3_ADORNMENT_OFFSET","MD3_AFFIX_OFFSET","MD3_FLAT_INPUT_OFFSET","MD3_ICON_OFFSET","MD3_INPUT_PADDING_HORIZONTAL","MD3_LABEL_PADDING_HORIZONTAL","MD3_LABEL_PADDING_TOP","MD3_MIN_HEIGHT","MD3_OUTLINED_INPUT_OFFSET","calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","labelYOffset","calculateFlatInputHorizontalPadding","adornmentConfig","isV3","LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","FLAT_INPUT_OFFSET","getConstants","paddingLeft","paddingRight","forEach","type","side","Icon","Left","Right","Affix","getInputTextColor","theme","textColor","disabled","mode","isFlat","colors","onSurfaceDisabled","onSurfaceVariant","onSurface","text","alpha","rgb","string","getActiveColor","error","activeUnderlineColor","activeOutlineColor","modeColor","primary","getPlaceholderColor","placeholder","getFlatBackgroundColor","onSecondaryContainer","surfaceVariant","undefined","dark","background","lighten","darken","getFlatUnderlineColor","underlineColor","getOutlinedOutlineInputColor","customOutlineColor","isTransparent","surfaceDisabled","outline","getFlatInputColors","baseFlatColorProps","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getOutlinedInputColors","baseOutlinedColorProps","outlineColor","AFFIX_OFFSET","ICON_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","INPUT_PADDING_HORIZONTAL","OUTLINED_INPUT_OFFSET"],"sources":["helpers.tsx"],"sourcesContent":["import type { Animated } from 'react-native';\n\nimport color from 'color';\n\nimport { MD3LightTheme } from '../../styles/themes';\nimport type { InternalTheme } from '../../types';\nimport { AdornmentSide, AdornmentType } from './Adornment/enums';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  ADORNMENT_SIZE,\n  MD2_ADORNMENT_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD2_ICON_OFFSET,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_TOP,\n  MD2_MIN_HEIGHT,\n  MD2_OUTLINED_INPUT_OFFSET,\n  MD3_ADORNMENT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD3_ICON_OFFSET,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD3_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  textColor,\n  disabled,\n  mode,\n}: BaseProps & { mode: Mode; textColor?: string }) => {\n  const isFlat = mode === 'flat';\n  if (textColor) {\n    return textColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      // @ts-ignore According to Figma for both themes the base color for disabled in `onSecondaryContainer`\n      return color(MD3LightTheme.colors.onSecondaryContainer)\n        .alpha(0.08)\n        .rgb()\n        .string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseFlatColorProps,\n      textColor,\n      mode: 'flat',\n    }),\n    activeColor: getActiveColor({\n      ...baseFlatColorProps,\n      error,\n      activeUnderlineColor,\n      mode: 'flat',\n    }),\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      textColor,\n      mode: 'outlined',\n    }),\n    activeColor: getActiveColor({\n      ...baseOutlinedColorProps,\n      error,\n      activeOutlineColor,\n      mode: 'outlined',\n    }),\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n  };\n};\n"],"mappings":"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"}