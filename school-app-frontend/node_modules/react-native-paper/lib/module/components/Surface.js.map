{"version":3,"names":["React","Animated","Platform","StyleSheet","useInternalTheme","overlay","isAnimatedValue","shadow","MD2Surface","forwardRef","ref","style","theme","overrideTheme","rest","elevation","flatten","dark","isDarkTheme","mode","colors","backgroundColor","surface","Surface","children","overridenTheme","testID","props","isV3","inputRange","interpolate","outputRange","map","OS","elevationLevel","getElevationAndroid","margin","padding","transform","borderRadius","outerLayerStyles","sharedStyle","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","shadowColor","position","alignSelf","top","left","right","bottom","restStyle","absoluteStyles","getStyleForAnimatedShadowLayer","layer","extrapolate","shadowOffset","width","getStyleForShadowLayer"],"sources":["Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { InternalTheme, MD3Elevation } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  /**\n   * @optional\n   */\n  theme?: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = React.forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark InternalTheme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-android.png\" />\n *     <figcaption>Surface on Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-ios.png\" />\n *     <figcaption>Surface on iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = React.forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID,\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    if (Platform.OS === 'web') {\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    const iOSShadowOutputRanges = [\n      {\n        shadowOpacity: 0.15,\n        height: [0, 1, 2, 4, 6, 8],\n        shadowRadius: [0, 3, 6, 8, 10, 12],\n      },\n      {\n        shadowOpacity: 0.3,\n        height: [0, 1, 1, 1, 2, 4],\n        shadowRadius: [0, 1, 2, 3, 3, 4],\n      },\n    ];\n\n    const shadowColor = '#000';\n\n    const { position, alignSelf, top, left, right, bottom, ...restStyle } =\n      (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const absoluteStyles = { position, alignSelf, top, right, bottom, left };\n    const sharedStyle = [{ backgroundColor }, restStyle];\n\n    if (isAnimatedValue(elevation)) {\n      const inputRange = [0, 1, 2, 3, 4, 5];\n\n      const getStyleForAnimatedShadowLayer = (layer: 0 | 1) => {\n        return {\n          shadowColor,\n          shadowOpacity: elevation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n            extrapolate: 'clamp',\n          }),\n          shadowOffset: {\n            width: 0,\n            height: elevation.interpolate({\n              inputRange,\n              outputRange: iOSShadowOutputRanges[layer].height,\n            }),\n          },\n          shadowRadius: elevation.interpolate({\n            inputRange,\n            outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n          }),\n        };\n      };\n\n      return (\n        <Animated.View\n          style={[getStyleForAnimatedShadowLayer(0), absoluteStyles]}\n        >\n          <Animated.View style={getStyleForAnimatedShadowLayer(1)}>\n            <Animated.View {...props} testID={testID} style={sharedStyle}>\n              {children}\n            </Animated.View>\n          </Animated.View>\n        </Animated.View>\n      );\n    }\n\n    const getStyleForShadowLayer = (layer: 0 | 1) => {\n      return {\n        shadowColor,\n        shadowOpacity: elevation\n          ? iOSShadowOutputRanges[layer].shadowOpacity\n          : 0,\n        shadowOffset: {\n          width: 0,\n          height: iOSShadowOutputRanges[layer].height[elevation],\n        },\n        shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n      };\n    };\n\n    return (\n      <Animated.View\n        ref={ref}\n        style={[getStyleForShadowLayer(0), absoluteStyles]}\n      >\n        <Animated.View style={[getStyleForShadowLayer(1)]}>\n          <Animated.View {...props} testID={testID} style={sharedStyle}>\n            {children}\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n    );\n  }\n);\n\nexport default Surface;\n"],"mappings":"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"}