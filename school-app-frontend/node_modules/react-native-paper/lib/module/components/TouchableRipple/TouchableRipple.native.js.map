{"version":3,"names":["React","Platform","StyleSheet","Pressable","withInternalTheme","getTouchableRippleColors","ANDROID_VERSION_LOLLIPOP","ANDROID_VERSION_PIE","TouchableRipple","style","background","borderless","disabled","disabledProp","rippleColor","underlayColor","children","theme","rest","showUnderlay","setShowUnderlay","useState","onPress","calculatedRippleColor","calculatedUnderlayColor","useForeground","OS","Version","handlePressIn","e","onPressIn","handlePressOut","onPressOut","supported","styles","overflowHidden","color","foreground","Children","only","backgroundColor","create","overflow"],"sources":["TouchableRipple.native.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  PressableAndroidRippleConfig,\n  StyleProp,\n  Platform,\n  ViewStyle,\n  StyleSheet,\n  Pressable,\n  GestureResponderEvent,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport { getTouchableRippleColors } from './utils';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_VERSION_PIE = 28;\n\ntype Props = React.ComponentProps<typeof Pressable> & {\n  borderless?: boolean;\n  background?: PressableAndroidRippleConfig;\n  disabled?: boolean;\n  onPress?: () => void | null;\n  rippleColor?: string;\n  underlayColor?: string;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  theme: InternalTheme;\n};\n\nconst TouchableRipple = ({\n  style,\n  background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const [showUnderlay, setShowUnderlay] = React.useState<boolean>(false);\n\n  const disabled = disabledProp || !rest.onPress;\n  const { calculatedRippleColor, calculatedUnderlayColor } =\n    getTouchableRippleColors({\n      theme,\n      rippleColor,\n      underlayColor,\n    });\n\n  // A workaround for ripple on Android P is to use useForeground + overflow: 'hidden'\n  // https://github.com/facebook/react-native/issues/6480\n  const useForeground =\n    Platform.OS === 'android' &&\n    Platform.Version >= ANDROID_VERSION_PIE &&\n    borderless;\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    setShowUnderlay(true);\n    rest.onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    setShowUnderlay(false);\n    rest.onPressOut?.(e);\n  };\n\n  if (TouchableRipple.supported) {\n    return (\n      <Pressable\n        {...rest}\n        disabled={disabled}\n        style={[borderless && styles.overflowHidden, style]}\n        android_ripple={\n          background != null\n            ? background\n            : {\n                color: calculatedRippleColor,\n                borderless,\n                foreground: useForeground,\n              }\n        }\n      >\n        {React.Children.only(children)}\n      </Pressable>\n    );\n  }\n\n  return (\n    <Pressable\n      {...rest}\n      disabled={disabled}\n      style={[\n        borderless && styles.overflowHidden,\n        showUnderlay && { backgroundColor: calculatedUnderlayColor },\n        style,\n      ]}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n    >\n      {React.Children.only(children)}\n    </Pressable>\n  );\n};\n\nTouchableRipple.supported =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\nconst styles = StyleSheet.create({\n  overflowHidden: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withInternalTheme(TouchableRipple);\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAGEC,QAAQ,EAERC,UAAU,EACVC,SAAS,QAEJ,cAAc;AAErB,SAASC,iBAAiB,QAAQ,oBAAoB;AAEtD,SAASC,wBAAwB,QAAQ,SAAS;AAElD,MAAMC,wBAAwB,GAAG,EAAE;AACnC,MAAMC,mBAAmB,GAAG,EAAE;AAc9B,MAAMC,eAAe,GAAG,QAUX;EAAA,IAVY;IACvBC,KAAK;IACLC,UAAU;IACVC,UAAU,GAAG,KAAK;IAClBC,QAAQ,EAAEC,YAAY;IACtBC,WAAW;IACXC,aAAa;IACbC,QAAQ;IACRC,KAAK;IACL,GAAGC;EACE,CAAC;EACN,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,KAAK,CAACqB,QAAQ,CAAU,KAAK,CAAC;EAEtE,MAAMT,QAAQ,GAAGC,YAAY,IAAI,CAACK,IAAI,CAACI,OAAO;EAC9C,MAAM;IAAEC,qBAAqB;IAAEC;EAAwB,CAAC,GACtDnB,wBAAwB,CAAC;IACvBY,KAAK;IACLH,WAAW;IACXC;EACF,CAAC,CAAC;;EAEJ;EACA;EACA,MAAMU,aAAa,GACjBxB,QAAQ,CAACyB,EAAE,KAAK,SAAS,IACzBzB,QAAQ,CAAC0B,OAAO,IAAIpB,mBAAmB,IACvCI,UAAU;EAEZ,MAAMiB,aAAa,GAAIC,CAAwB,IAAK;IAAA;IAClDT,eAAe,CAAC,IAAI,CAAC;IACrB,mBAAAF,IAAI,CAACY,SAAS,oDAAd,qBAAAZ,IAAI,EAAaW,CAAC,CAAC;EACrB,CAAC;EAED,MAAME,cAAc,GAAIF,CAAwB,IAAK;IAAA;IACnDT,eAAe,CAAC,KAAK,CAAC;IACtB,oBAAAF,IAAI,CAACc,UAAU,qDAAf,sBAAAd,IAAI,EAAcW,CAAC,CAAC;EACtB,CAAC;EAED,IAAIrB,eAAe,CAACyB,SAAS,EAAE;IAC7B,oBACE,oBAAC,SAAS,eACJf,IAAI;MACR,QAAQ,EAAEN,QAAS;MACnB,KAAK,EAAE,CAACD,UAAU,IAAIuB,MAAM,CAACC,cAAc,EAAE1B,KAAK,CAAE;MACpD,cAAc,EACZC,UAAU,IAAI,IAAI,GACdA,UAAU,GACV;QACE0B,KAAK,EAAEb,qBAAqB;QAC5BZ,UAAU;QACV0B,UAAU,EAAEZ;MACd;IACL,IAEAzB,KAAK,CAACsC,QAAQ,CAACC,IAAI,CAACvB,QAAQ,CAAC,CACpB;EAEhB;EAEA,oBACE,oBAAC,SAAS,eACJE,IAAI;IACR,QAAQ,EAAEN,QAAS;IACnB,KAAK,EAAE,CACLD,UAAU,IAAIuB,MAAM,CAACC,cAAc,EACnChB,YAAY,IAAI;MAAEqB,eAAe,EAAEhB;IAAwB,CAAC,EAC5Df,KAAK,CACL;IACF,SAAS,EAAEmB,aAAc;IACzB,UAAU,EAAEG;EAAe,IAE1B/B,KAAK,CAACsC,QAAQ,CAACC,IAAI,CAACvB,QAAQ,CAAC,CACpB;AAEhB,CAAC;AAEDR,eAAe,CAACyB,SAAS,GACvBhC,QAAQ,CAACyB,EAAE,KAAK,SAAS,IAAIzB,QAAQ,CAAC0B,OAAO,IAAIrB,wBAAwB;AAE3E,MAAM4B,MAAM,GAAGhC,UAAU,CAACuC,MAAM,CAAC;EAC/BN,cAAc,EAAE;IACdO,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAetC,iBAAiB,CAACI,eAAe,CAAC"}