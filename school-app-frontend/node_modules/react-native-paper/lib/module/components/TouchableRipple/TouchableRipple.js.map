{"version":3,"names":["React","Platform","Pressable","StyleSheet","withInternalTheme","getTouchableRippleColors","TouchableRipple","style","background","_background","borderless","disabled","disabledProp","rippleColor","underlayColor","_underlayColor","children","theme","rest","handlePressIn","e","centered","onPressIn","calculatedRippleColor","button","currentTarget","window","getComputedStyle","dimensions","getBoundingClientRect","touchX","touchY","changedTouches","touches","nativeEvent","touch","width","height","locationX","pageX","locationY","pageY","size","Math","min","max","container","document","createElement","setAttribute","Object","assign","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","appendChild","requestAnimationFrame","handlePressOut","onPressOut","containers","querySelectorAll","forEach","firstChild","setTimeout","parentNode","removeChild","onPress","styles","touchable","Children","only","supported","create","OS","cursor"],"sources":["TouchableRipple.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport { getTouchableRippleColors } from './utils';\n\nexport type Props = React.ComponentPropsWithRef<typeof Pressable> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/pressable#rippleconfig\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Pressable props https://reactnative.dev/docs/Pressable#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { calculatedRippleColor } = getTouchableRippleColors({\n      theme,\n      rippleColor,\n    });\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild as HTMLSpanElement;\n\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <Pressable\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n      style={[styles.touchable, borderless && styles.borderless, style]}\n    >\n      {React.Children.only(children)}\n    </Pressable>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withInternalTheme(TouchableRipple);\n"],"mappings":"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"}